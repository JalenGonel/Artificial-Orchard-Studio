{
  "createdAt": "2025-07-29T02:33:30.339Z",
  "updatedAt": "2025-09-06T03:36:39.000Z",
  "id": "qbJAqng79qmg7On6",
  "name": "🤖 Spielberg — AOS V2 🤖🎬",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "content": "# Spielberg 🤖\n## Orchestrator Agent\n\n",
        "height": 324,
        "width": 548,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        576,
        -1584
      ],
      "typeVersion": 1,
      "id": "62863d3d-744a-4cec-af9f-38b4c143e088",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fe7ecc99-e1e8-4a5e-bdd6-6fce9757b234",
              "name": "text",
              "value": "={{ $json.message.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "b7496c86-7b11-42b9-90b9-23e8c1cc2af6",
      "name": "Set 'Text'",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -176,
        -1552
      ]
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}",
        "additionalFields": {}
      },
      "id": "1afadaca-9dcd-4fd4-a70d-f322af7f3521",
      "name": "Download Voice File",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -320,
        -1632
      ],
      "webhookId": "fbabedc9-09fa-4cd9-9816-1167ad664313",
      "credentials": {
        "telegramApi": {
          "id": "q0oWlq3ffaOp8PwB",
          "name": "Orchard Studios | OrchardStudios_bot"
        }
      }
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "id": "06abc9b5-525f-49e1-a75d-637c8c32cfd6",
      "name": "Transcribe Audio",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        -16,
        -1632
      ],
      "credentials": {
        "openAiApi": {
          "id": "O38qltZmjubnlhtn",
          "name": "OpenAI (Bredcrums Org.)"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Telegram Trigger JALEN').item.json.message.voice.file_id }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "id": "c8c3801f-8c7a-4d17-83a7-f2d5220da66b"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Voice"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8c844924-b2ed-48b0-935c-c66a8fd0c778",
                    "leftValue": "={{ $('Telegram Trigger JALEN').item.json.message.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a78d009b-b26f-4083-8bcf-73c004d14380",
                    "leftValue": "={{ $('Telegram Trigger JALEN').item.json?.message?.photo }}",
                    "rightValue": "=",
                    "operator": {
                      "type": "array",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "photo"
            }
          ]
        },
        "options": {}
      },
      "id": "7ff14d0b-1629-42d3-86d5-3e3565399dae",
      "name": "Switch1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -576,
        -1568
      ]
    },
    {
      "parameters": {
        "content": "# Triggers",
        "height": 468,
        "width": 352,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1088,
        -1808
      ],
      "id": "a9f4d494-6bf5-4ef0-8375-7f9972adad2f",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "976cf2c9-01b6-46cf-97b4-675a67ca57bc",
              "name": "text",
              "value": "={{ $json.text }}",
              "type": "string"
            },
            {
              "id": "d39b783d-56da-47c1-a378-4083ae54e00e",
              "name": "messaging_platform",
              "value": "={{ $('Telegram Trigger JALEN')?.isExecuted ? 'Telegram' : 'Slack'  }}",
              "type": "string"
            },
            {
              "id": "a85c7277-cdb5-4b0f-a8e3-3c52c8852091",
              "name": "message_from",
              "value": "={{ $('Telegram Trigger JALEN')?.isExecuted ? $('Telegram Trigger JALEN').item.json.message.from.first_name : $('Telegram Trigger ADAM')?.isExecuted ? $('Telegram Trigger ADAM').item.json.message.from.first_name : undefined }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        176,
        -1552
      ],
      "id": "65657071-e221-4598-90cf-d478529fcfa1",
      "name": "Input"
    },
    {
      "parameters": {
        "content": "# INPUT - message\n## Intake chat message, convert to text / LLM compatible input",
        "height": 452,
        "width": 724,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -592,
        -1744
      ],
      "typeVersion": 1,
      "id": "f9fffdeb-128d-436b-8243-8222f15da91e",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "jsCode": "// Initialize the output arrays\nconst steps = [];\nconst tokens = [];\nlet totalTokens = 0; // Changed to track total tokens instead of cost\n\n// Process each item in the input\nfor (const item of $input.all()) {\n  let data = item.json;\n  \n  // Check if the data is an array itself (like your example JSON)\n  if (Array.isArray(data)) {\n    // Process each object in the array\n    for (const obj of data) {\n      // Extract steps information\n      if (obj.intermediateSteps && Array.isArray(obj.intermediateSteps)) {\n        for (const step of obj.intermediateSteps) {\n          if (step.action) {\n            steps.push({\n              tool: step.action.tool,\n              toolInput: step.action.toolInput,\n              observation: step.observation\n            });\n          }\n        }\n      }\n      \n      // Extract token information\n      if (obj.intermediateSteps && Array.isArray(obj.intermediateSteps)) {\n        for (const step of obj.intermediateSteps) {\n          if (step.action && step.action.messageLog && Array.isArray(step.action.messageLog)) {\n            for (const message of step.action.messageLog) {\n              if (message.kwargs && message.kwargs.response_metadata && message.kwargs.response_metadata.usage) {\n                const usage = message.kwargs.response_metadata.usage;\n                tokens.push({\n                  prompt_tokens: usage.prompt_tokens,\n                  completion_tokens: usage.completion_tokens,\n                  total_tokens: usage.total_tokens,\n                  model_name: message.kwargs.response_metadata.model_name\n                });\n                \n                // Add the tokens to our running total\n                if (typeof usage.total_tokens === 'number') {\n                  totalTokens += usage.total_tokens;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  } else {\n    // If data is not an array, process it as a single object\n    // Extract steps information\n    if (data.intermediateSteps && Array.isArray(data.intermediateSteps)) {\n      for (const step of data.intermediateSteps) {\n        if (step.action) {\n          steps.push({\n            tool: step.action.tool,\n            toolInput: step.action.toolInput,\n            observation: step.observation\n          });\n        }\n      }\n    }\n    \n    // Extract token information\n    if (data.intermediateSteps && Array.isArray(data.intermediateSteps)) {\n      for (const step of data.intermediateSteps) {\n        if (step.action && step.action.messageLog && Array.isArray(step.action.messageLog)) {\n          for (const message of step.action.messageLog) {\n            if (message.kwargs && message.kwargs.response_metadata && message.kwargs.response_metadata.usage) {\n              const usage = message.kwargs.response_metadata.usage;\n              tokens.push({\n                prompt_tokens: usage.prompt_tokens,\n                completion_tokens: usage.completion_tokens,\n                total_tokens: usage.total_tokens,\n                model_name: message.kwargs.response_metadata.model_name\n              });\n              \n              // Add the tokens to our running total\n              if (typeof usage.total_tokens === 'number') {\n                totalTokens += usage.total_tokens;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n// Return the processed data with total_tokens included\nreturn [{\n  json: {\n    steps: steps,\n    tokens: tokens,\n    total_tokens: totalTokens\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1264,
        -1648
      ],
      "id": "15da8320-6811-44cd-bb4d-c9480e5e8fff",
      "name": "Clean Up"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger JALEN').item.json.message.chat.id }}",
        "text": "={{ $json.error }}",
        "additionalFields": {
          "appendAttribution": true
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1568,
        -1424
      ],
      "id": "ba81adc7-31cf-47a8-b7e2-e0adbee89b95",
      "name": "Error Message",
      "webhookId": "7065a160-b927-43b6-b327-feec46cc0088",
      "credentials": {
        "telegramApi": {
          "id": "q0oWlq3ffaOp8PwB",
          "name": "Orchard Studios | OrchardStudios_bot"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger JALEN').item.json.message.chat.id }}",
        "text": "={{ $json.text }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "MarkdownV2"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1888,
        -1648
      ],
      "id": "f96d748e-3e54-472b-95b2-cb7e8679f5b5",
      "name": "Response",
      "webhookId": "4d174459-d5cc-4297-a449-369d3f10ef23",
      "executeOnce": false,
      "retryOnFail": true,
      "maxTries": 2,
      "waitBetweenTries": 5000,
      "credentials": {
        "telegramApi": {
          "id": "q0oWlq3ffaOp8PwB",
          "name": "Orchard Studios | OrchardStudios_bot"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1kzBW-0cB99TcrWLWQFAvjT52_jCGCLR0PbQ7s8bqWwY",
          "mode": "list",
          "cachedResultName": "Studio Analytics Logs — AOS V2",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1kzBW-0cB99TcrWLWQFAvjT52_jCGCLR0PbQ7s8bqWwY/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1581498117,
          "mode": "list",
          "cachedResultName": "Agent Studio Swarm Actions",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1kzBW-0cB99TcrWLWQFAvjT52_jCGCLR0PbQ7s8bqWwY/edit#gid=1581498117"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Timestamp": "={{ $now.format('yyyy-MM-dd hh:m a') }}",
            "Workflow": "={{ $workflow.name }}",
            "Input": "={{ $('Input').item.json.text }}",
            "Output": "={{ $('Spielberg - Orchard Studios Director Orchestration Agent').item.json.output }}",
            "Actions": "={{ JSON.stringify($json.steps, null, 2) }}",
            "Tokens": "={{ JSON.stringify($json.tokens, null, 2) }}",
            "Total Tokens": "={{ $json.total_tokens }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Timestamp",
              "displayName": "Timestamp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Workflow",
              "displayName": "Workflow",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Input",
              "displayName": "Input",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Output",
              "displayName": "Output",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Actions",
              "displayName": "Actions",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Tokens",
              "displayName": "Tokens",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Total Tokens",
              "displayName": "Total Tokens",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        1424,
        -1648
      ],
      "id": "b327e506-b57d-427c-a206-08d11327de29",
      "name": "Append to Agent Logs Sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "SmV2UM0V7zCsRueD",
          "name": "AO Google Sheets"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 416,
        "width": 320,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -48,
        -1024
      ],
      "id": "8af54ee4-ad0b-40aa-9590-8e38f5446d13",
      "name": "Sticky Note28"
    },
    {
      "parameters": {
        "content": "# \"Paulina\"",
        "height": 80,
        "width": 182,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -48,
        -1024
      ],
      "id": "f1ad238d-18ca-4ac4-b928-e3d51dd8ff4e",
      "name": "Sticky Note29"
    },
    {
      "parameters": {
        "content": "# \"MacGyver\"",
        "height": 80,
        "width": 230,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        368,
        -1024
      ],
      "id": "0b6757a9-2fd8-4386-8c48-f9d8f70e1c52",
      "name": "Sticky Note36"
    },
    {
      "parameters": {
        "content": "# \"Forest\"",
        "height": 80,
        "width": 182,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        784,
        -1024
      ],
      "id": "b1c17a9c-7841-4708-80e4-e47f32ea176e",
      "name": "Sticky Note37"
    },
    {
      "parameters": {
        "content": "# \"Brittany\"",
        "height": 80,
        "width": 310,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1200,
        -1024
      ],
      "id": "dd74a512-c198-446f-9f42-297ac5ab9f76",
      "name": "Sticky Note39"
    },
    {
      "parameters": {
        "content": "# Jalen",
        "height": 96,
        "width": 288
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1056,
        -1728
      ],
      "id": "f87e572d-e278-445b-b943-f3c49b5ed066",
      "name": "Sticky Note25"
    },
    {
      "parameters": {
        "content": "# Adam",
        "height": 96,
        "width": 288
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1056,
        -1536
      ],
      "id": "60f871ce-80ce-4032-a9da-de93086eb964",
      "name": "Sticky Note26"
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {
          "download": true
        }
      },
      "id": "ab23a006-4c80-4c00-a305-6914ddf57174",
      "name": "Telegram Trigger JALEN",
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [
        -864,
        -1728
      ],
      "webhookId": "b6d30d64-1d86-47f0-b08c-c9d0cbdbe7c7",
      "credentials": {
        "telegramApi": {
          "id": "q0oWlq3ffaOp8PwB",
          "name": "Orchard Studios | OrchardStudios_bot"
        }
      }
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {
          "download": true
        }
      },
      "id": "fad2034e-f6e9-4758-9155-6f3c26e52877",
      "name": "Telegram Trigger ADAM",
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [
        -864,
        -1536
      ],
      "webhookId": "b6d30d64-1d86-47f0-b08c-c9d0cbdbe7c7",
      "credentials": {
        "telegramApi": {
          "id": "ov3otwm6ZfjVHHaY",
          "name": "Telegram a_orchard_orchestrator_bot"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "content": "",
        "height": 416,
        "width": 880,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1616,
        -1024
      ],
      "id": "bc9a3e1d-fdd8-41ba-980b-e06c912cdc2e",
      "name": "Sticky Note18"
    },
    {
      "parameters": {
        "content": "# \"Tars\"",
        "height": 80,
        "width": 150,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1616,
        -1024
      ],
      "id": "a48c7501-4a8f-4da4-8b87-98e19c021032",
      "name": "Sticky Note46"
    },
    {
      "parameters": {
        "toolDescription": "Brittany (or \"Britt\") is the PR and publish agent",
        "text": "=Data ID: {{ $fromAI(\"data_id\") }}\nQuery: {{ $fromAI(\"query\") }}\nAdditional Info: {{ $fromAI(\"additional_info\") }}\n\nCurrent Date/Time (ISO format): {{ $now.toUTC().toISO() }}",
        "needsFallback": true,
        "options": {
          "systemMessage": "={{ $('aos_prompts_and_context').item.json.aos_prompts_and_contexts.aos_agents.brittany.system_prompt }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        1248,
        -896
      ],
      "id": "cb6d232f-98bf-49c1-9ec5-66dd42edf695",
      "name": "Brittany - Public Relations Agent"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "TTRgShxKssQmwHFQ",
          "mode": "list",
          "cachedResultName": "Active — Publish Final Package"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "FINAL_PACKAGE_ID": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('FINAL_PACKAGE_ID', ``, 'string') }}",
            "caption": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('caption', ``, 'string') }}",
            "schedule_date": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('schedule_date', ``, 'string') }}",
            "google_drive_final_package_folder_id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('google_drive_final_package_folder_id', ``, 'string') }}",
            "platform": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('platform', ``, 'string') }}",
            "SpecialPublishOptions": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('SpecialPublishOptions', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "FINAL_PACKAGE_ID",
              "displayName": "FINAL_PACKAGE_ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "google_drive_final_package_folder_id",
              "displayName": "google_drive_final_package_folder_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "caption",
              "displayName": "caption",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true
            },
            {
              "id": "schedule_date",
              "displayName": "schedule_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "platform",
              "displayName": "platform",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "SpecialPublishOptions",
              "displayName": "SpecialPublishOptions",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1408,
        -752
      ],
      "id": "baa5eb07-0f43-4c44-af2d-2ddbf360eeb4",
      "name": "Publish Final Package"
    },
    {
      "parameters": {
        "content": "## CREATE Special Data Tools - n8n Workflows\n##### 1. Project\n##### 2. Version Lock\n##### 3. Final Package",
        "height": 128,
        "width": 592,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1888,
        -1008
      ],
      "id": "1549429f-44ba-452d-904a-e3f681c17197",
      "name": "Sticky Note20"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1bAQwpVD4lERURH2bfN0xri-IUPwmkZDsSpUtXBhDsj8",
          "mode": "list",
          "cachedResultName": "AO Studios V2 — Content Creation Tracker",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1bAQwpVD4lERURH2bfN0xri-IUPwmkZDsSpUtXBhDsj8/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Ideas",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1bAQwpVD4lERURH2bfN0xri-IUPwmkZDsSpUtXBhDsj8/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "idea": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('idea', ``, 'string') }}",
            "title": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('title', ``, 'string') }}",
            "logline": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('logline', ``, 'string') }}",
            "author": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('author', ``, 'string') }}",
            "treatment": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('treatment', ``, 'string') }}",
            "raw_initial_messages": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('raw_initial_messages', ``, 'string') }}",
            "created_at": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('created_at', ``, 'string') }}",
            "updated_at": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('updated_at', ``, 'string') }}",
            "additional_notes": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('additional_notes', ``, 'string') }}",
            "internal_title": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('internal_title', ``, 'string') }}",
            "last_workflow_execution_id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('last_workflow_execution_id', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "idea",
              "displayName": "idea",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "idea_status",
              "displayName": "idea_status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "logline",
              "displayName": "logline",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "author",
              "displayName": "author",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "treatment",
              "displayName": "treatment",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "raw_initial_messages",
              "displayName": "raw_initial_messages",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "updated_at",
              "displayName": "updated_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "additional_notes",
              "displayName": "additional_notes",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "internal_title",
              "displayName": "internal_title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "last_workflow_execution_id",
              "displayName": "last_workflow_execution_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        2016,
        -768
      ],
      "id": "2c9ff75d-18a7-4fb5-b8ac-12d42e45e25a",
      "name": "Create Idea",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "i2bVwab0MxRJzwYf",
          "name": "Google Sheets AO OAuth2"
        }
      }
    },
    {
      "parameters": {
        "content": "# \"Yellow Nametag\"",
        "height": 80,
        "width": 326
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3072,
        -1584
      ],
      "id": "aa2b8226-a76f-4cd2-aeba-5f58b5d4731d",
      "name": "Sticky Note51"
    },
    {
      "parameters": {
        "content": "# \"Red Nametag\"",
        "height": 80,
        "width": 278,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3072,
        -1760
      ],
      "id": "393eb2a1-080c-4142-bb66-46a0591fcf8d",
      "name": "Sticky Note52"
    },
    {
      "parameters": {
        "content": "## Nametag Visual Color Legend \n### (n8n stickies in workflow)\n\n\n## Primary Agent\n\n\n\n\n\n\n\n\n\n## Secondary Agent\n\n\n\n\n\n\n\n\n\n## Tertiary (3rd Agent)",
        "height": 688,
        "width": 368,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3088,
        -1904
      ],
      "id": "285ac248-a72b-4d03-b123-fcbf46522fca",
      "name": "Sticky Note53"
    },
    {
      "parameters": {
        "content": "# \"Blue Nametag\"",
        "height": 80,
        "width": 326,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3072,
        -1408
      ],
      "id": "96cf7c79-8397-4c2c-a3c5-dcee097e86a9",
      "name": "Sticky Note54"
    },
    {
      "parameters": {
        "content": "",
        "width": 736,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1264,
        -1440
      ],
      "id": "277637b8-18c9-4d2f-ba9c-8fdcb4866d21",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "content": "",
        "width": 736,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1264,
        -1664
      ],
      "id": "4b909f6c-22fd-4e54-a152-038491e3637c",
      "name": "Sticky Note13"
    },
    {
      "parameters": {
        "content": "# Output: Success\n## output abstracted chat message, record analytics",
        "width": 304,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2000,
        -1664
      ],
      "id": "7c4ee65c-9b55-4986-87f7-98ee9276cefb",
      "name": "Sticky Note27"
    },
    {
      "parameters": {
        "content": "# Output: Error",
        "height": 80,
        "width": 256,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1744,
        -1440
      ],
      "id": "51cdb11f-65c6-43b2-af0a-2c1cf5f52b2a",
      "name": "Sticky Note62"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        768,
        -560
      ],
      "id": "2527ed87-d918-420d-991b-b9633a7a44d3",
      "name": "Calculator Tool"
    },
    {
      "parameters": {
        "content": "",
        "width": 470,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        720,
        -592
      ],
      "id": "4d6a6524-5f4f-44c2-a889-b85a5c4bc3c1",
      "name": "Sticky Note16"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-5",
          "mode": "list",
          "cachedResultName": "gpt-5"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1264,
        -544
      ],
      "id": "087953d8-76d3-453f-bca8-439e870ceba4",
      "name": "OpenAI gpt-5",
      "credentials": {
        "openAiApi": {
          "id": "O38qltZmjubnlhtn",
          "name": "OpenAI (Bredcrums Org.)"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-5-mini",
          "mode": "list",
          "cachedResultName": "gpt-5-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1424,
        -544
      ],
      "id": "0bff4871-7843-4508-bd7d-685a87107efb",
      "name": "OpenAI GPT-5-MINI",
      "credentials": {
        "openAiApi": {
          "id": "O38qltZmjubnlhtn",
          "name": "OpenAI (Bredcrums Org.)"
        }
      }
    },
    {
      "parameters": {
        "content": "# Blue Background",
        "height": 128,
        "width": 278,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2688,
        -1728
      ],
      "id": "d4b46b2c-6cb9-44ff-8bf9-11bf291a949c",
      "name": "Sticky Note56"
    },
    {
      "parameters": {
        "content": "## Background Grouped Content  Visual Color Legend\n### (n8n stickies in workflow)\n\n## Primary Agent\n\n\n\n\n\n\n\n\n\n## Shared Tools Group (color 1)\n\n\n\n\n\n\n\n\n\n## Shared Tools Group (color 2)\n\n\n\n\n\n\n\n\n\n\n\n## General grouping of things",
        "height": 896,
        "width": 368,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2704,
        -1904
      ],
      "id": "43e8e62b-d759-4bcb-b272-927318793abb",
      "name": "Sticky Note57"
    },
    {
      "parameters": {
        "content": "# Yellow Background",
        "height": 128,
        "width": 278
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2688,
        -1552
      ],
      "id": "47052fff-a3df-48cb-b3b9-5649998a1166",
      "name": "Sticky Note63"
    },
    {
      "parameters": {
        "content": "# Brown Background",
        "height": 128,
        "width": 278,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2688,
        -1360
      ],
      "id": "22953fa7-7f27-4d7f-9e80-a5f679e603c0",
      "name": "Sticky Note64"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-5-nano",
          "mode": "list",
          "cachedResultName": "gpt-5-nano"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1584,
        -544
      ],
      "id": "904c4370-f1dd-4fbd-b7b6-44a43b018f74",
      "name": "OpenAI gpt-NANO",
      "credentials": {
        "openAiApi": {
          "id": "O38qltZmjubnlhtn",
          "name": "OpenAI (Bredcrums Org.)"
        }
      }
    },
    {
      "parameters": {
        "messages": {
          "message": [
            {}
          ]
        },
        "options": {},
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.perplexityTool",
      "typeVersion": 1,
      "position": [
        1056,
        -560
      ],
      "id": "98e7310c-9b84-42dd-af77-ead37f769d9b",
      "name": "Message Web Model in Perplexity",
      "credentials": {
        "perplexityApi": {
          "id": "OTgOnkvwmgSC0MWA",
          "name": "Perplexity account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1.1,
      "position": [
        912,
        -560
      ],
      "id": "91b06ed4-a53b-4497-9833-4a962f37df46",
      "name": "Thinking Tool"
    },
    {
      "parameters": {
        "content": "# Gray Background",
        "height": 128,
        "width": 278,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2688,
        -1168
      ],
      "id": "c66c0ff5-e3da-41e7-b91d-768b3ef25cfb",
      "name": "Sticky Note66"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        352,
        -1664
      ],
      "id": "b150f013-3d53-4f79-b77a-b817ae517fec",
      "name": "Merge"
    },
    {
      "parameters": {
        "content": "# Prompts, System Contexts, Memory Management, Metadata values, etc.\n## Input prompts for each agent, as well as essential context and & info always to be included. In interim of final location , is in Set/Edit fields for now.",
        "height": 388,
        "width": 724,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -592,
        -2160
      ],
      "typeVersion": 1,
      "id": "c0814c47-25f2-40f3-89e9-5dfff1949f68",
      "name": "Sticky Note61"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -688,
        -1936
      ],
      "id": "30216a12-da4b-4f5f-855e-e88aeb1ef8a1",
      "name": "_"
    },
    {
      "parameters": {
        "content": "## 🚧 Example Questions Rainman should answer\n### 1. \"How many production run locks does Project \"X\" have?\"\n### 2. \"What is the status on the tiktok draft for project \"baumgartner\"? The latest draft.\n### 3. Is the production run for the last one we did complete?\"\n### 4. How many working drafters were made after 4:35 am yesterday?\n### 5. What's the exact code for the working draft about the fire hose?\n### 6. Can we publish production version lock\n ### 7. for project vanguard yet? (meaning at least one produced deliverable for all listed in shot_list)",
        "height": 816
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1584,
        -2000
      ],
      "id": "6084f03b-ef1f-4d13-ada9-d5c7449b4b81",
      "name": "Sticky Note67"
    },
    {
      "parameters": {
        "content": "### LLMs OpenRouter",
        "width": 464,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        160,
        -592
      ],
      "id": "09e022b5-0534-4ffb-9cc6-77f6c36ad720",
      "name": "Sticky Note79"
    },
    {
      "parameters": {
        "model": "openai/gpt-5",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        176,
        -544
      ],
      "id": "ad69a504-2948-4289-bbe4-a9388f94866f",
      "name": "OPRouter gpt-5",
      "credentials": {
        "openRouterApi": {
          "id": "pwj1L3d2Ror7G0eW",
          "name": "AO Workspace ALL | (@adamandjalen@gmail acc.)"
        }
      }
    },
    {
      "parameters": {
        "model": "openai/gpt-5-mini",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        336,
        -544
      ],
      "id": "27104d3e-1389-4c47-befd-81de977f7ee0",
      "name": "OPR gpt-MINI",
      "credentials": {
        "openRouterApi": {
          "id": "pwj1L3d2Ror7G0eW",
          "name": "AO Workspace ALL | (@adamandjalen@gmail acc.)"
        }
      }
    },
    {
      "parameters": {
        "model": "openai/gpt-5",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        496,
        -544
      ],
      "id": "8865fc5b-1eb3-494d-ab7a-71ec088c095d",
      "name": "OPR-gpt-5-NANO",
      "credentials": {
        "openRouterApi": {
          "id": "pwj1L3d2Ror7G0eW",
          "name": "AO Workspace ALL | (@adamandjalen@gmail acc.)"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 416,
        "width": 320,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        368,
        -1024
      ],
      "id": "f77b41bc-d679-4c7a-ae61-5a83edabe2ca",
      "name": "Sticky Note38"
    },
    {
      "parameters": {
        "content": "### LLMs OpenRouter",
        "height": 144,
        "width": 464,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1792,
        -576
      ],
      "id": "0cbeb79d-d452-4561-bda1-55d88ae2956f",
      "name": "Sticky Note80"
    },
    {
      "parameters": {
        "model": "openai/gpt-5",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        1808,
        -544
      ],
      "id": "2c7adefd-7033-461e-a030-96304fd6dbad",
      "name": "OPRouter gpt-",
      "credentials": {
        "openRouterApi": {
          "id": "pwj1L3d2Ror7G0eW",
          "name": "AO Workspace ALL | (@adamandjalen@gmail acc.)"
        }
      }
    },
    {
      "parameters": {
        "model": "openai/gpt-5-mini",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        1968,
        -544
      ],
      "id": "bbef01b7-9692-42c5-94d8-9ce8ffe78ae6",
      "name": "OPR gpt-MINI1",
      "credentials": {
        "openRouterApi": {
          "id": "pwj1L3d2Ror7G0eW",
          "name": "AO Workspace ALL | (@adamandjalen@gmail acc.)"
        }
      }
    },
    {
      "parameters": {
        "model": "openai/gpt-5",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        2128,
        -544
      ],
      "id": "dcbb7746-5197-438b-aa36-fa234f27173d",
      "name": "OPR-gpt-5-NANO1",
      "credentials": {
        "openRouterApi": {
          "id": "pwj1L3d2Ror7G0eW",
          "name": "AO Workspace ALL | (@adamandjalen@gmail acc.)"
        }
      }
    },
    {
      "parameters": {
        "content": "### LLMs OpenAI",
        "height": 144,
        "width": 464,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1248,
        -576
      ],
      "id": "e6fb2467-e252-4315-a43d-082fd07882a3",
      "name": "Sticky Note81"
    },
    {
      "parameters": {
        "content": "",
        "height": 416,
        "width": 320,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1200,
        -1024
      ],
      "id": "6357b486-1a3d-46fa-9153-11a29b243b81",
      "name": "Sticky Note76"
    },
    {
      "parameters": {
        "content": "",
        "height": 416,
        "width": 320,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        784,
        -1024
      ],
      "id": "2ec971fb-f038-4a4e-b666-e32c18bcf836",
      "name": "Sticky Note82"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "sen58nBLFsrtyzo3",
          "mode": "list",
          "cachedResultName": "Artificial Orchard Studios — 🚧 Paulina's Writer Room — Writing Agents"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "aos_prompts_and_contexts": "={{ $('aos_prompts_and_context').item.json.aos_prompts_and_contexts }}",
            "id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('id', ``, 'string') }}",
            "additional_info": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('additional_info', ``, 'string') }}",
            "query": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('query', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "chatid",
              "displayName": "chatid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "query",
              "displayName": "query",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "additional_info",
              "displayName": "additional_info",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "aos_prompts_and_contexts",
              "displayName": "aos_prompts_and_contexts",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "object",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        48,
        -1200
      ],
      "id": "ecb8b249-6b57-43fa-b4b0-3afa4bc5569a",
      "name": "Paulina's Writer Room - Writing Agents",
      "disabled": true
    },
    {
      "parameters": {
        "toolDescription": "AI Agent that appends and updates data to the database, especially between stages of content initiative creation.",
        "text": "=Data ID: {{ $fromAI(\"data_id\") }}\nQuery: {{ $fromAI(\"query\") }}\nAdditional Info: {{ $fromAI(\"additional_info\") }}\n\nCurrent Date/Time (ISO format): {{ $now.toUTC().toISO() }}",
        "needsFallback": true,
        "options": {
          "systemMessage": "={{ $('aos_prompts_and_context').item.json.aos_prompts_and_contexts.aos_agents.tars.system_prompt }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        1664,
        -880
      ],
      "id": "a0426af7-7ce3-4d78-97af-e201138612c8",
      "name": "Tars - Database Management Agent"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "cc809156-b5e6-46d5-9a51-d2c9aa73c35d",
              "name": "aos_prompts_and_contexts",
              "value": "={{ $json }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        352,
        -1936
      ],
      "id": "bc6832b6-d60d-49fa-ac46-2663c4916802",
      "name": "aos_prompts_and_context"
    },
    {
      "parameters": {
        "description": "=",
        "workflowId": {
          "__rl": true,
          "value": "2f3E1KLFcLYyiXVm",
          "mode": "list",
          "cachedResultName": "Artificial Orchard Studios — Run Production Run — AOS V2"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "production_version_lock_id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('production_version_lock_id', `include prod_version_lock_id provided.`, 'string') }}",
            "run_id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('run_id', `Only provide if run_id was included in message input. Otherwise, set to null.`, 'string') }}",
            "asset_gen_contingency_instructions_prompt": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('asset_gen_contingency_instructions_prompt', ``, 'string') }}",
            "shot_list_file_id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('shot_list_file_id', ``, 'string') }}",
            "is_partial_run": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('is_partial_run', ``, 'boolean') }}",
            "start_new_production_run": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('start_new_production_run', ``, 'boolean') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "run_sku",
              "displayName": "run_sku",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": true
            },
            {
              "id": "run_id",
              "displayName": "run_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true
            },
            {
              "id": "shot_list_file_id",
              "displayName": "shot_list_file_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "start_new_production_run",
              "displayName": "start_new_production_run",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "boolean",
              "removed": false
            },
            {
              "id": "is_partial_run",
              "displayName": "is_partial_run",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "boolean",
              "removed": false
            },
            {
              "id": "production_version_lock_id",
              "displayName": "production_version_lock_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "asset_gen_contingency_instructions_prompt",
              "displayName": "asset_gen_contingency_instructions_prompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        976,
        -736
      ],
      "id": "803c5351-6221-479b-b7b1-87e6533bbaec",
      "name": "Run Production Run Workflow"
    },
    {
      "parameters": {
        "toolDescription": "Forrest runs Production Runs, creates partial runs, and answers questions about the past Production Runs and progress.",
        "text": "=Data ID: {{ $fromAI(\"data_id\") }}\nQuery: {{ $fromAI(\"query\") }}\nAdditional Info: {{ $fromAI(\"additional_info\") }}\n\nCurrent Date/Time (ISO format): {{ $now.toUTC().toISO() }}",
        "needsFallback": true,
        "options": {
          "systemMessage": "={{ $('aos_prompts_and_context').item.json.aos_prompts_and_contexts.aos_agents.forest.system_prompt }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        832,
        -896
      ],
      "id": "760f05f6-2ec6-41fa-8b41-4d24fe592f20",
      "name": "Forest - Run Production Runs Agent"
    },
    {
      "parameters": {
        "content": "# Artificial Orchard Studios - Version 2 (AOS v2) — In‑Workflow Documentation \n## (Headers Only so far)\n\n## Overview\n\n## AI Agents\n\n## (non‑AI) n8n Workflows\n\n## API Services & Tools\n\n## Required Files (Docs & Sheets)\n\n## Data Model & Status States\n\n## SOPs & Guardrails\n\n## Setup Checklist (Quick Start)\n\n## Permissions & Credentials\n\n## Troubleshooting\n",
        "height": 1472,
        "width": 576,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2240,
        -2000
      ],
      "id": "64c746ab-498d-4a16-8b06-6317c98ca936",
      "name": "Sticky Note12"
    },
    {
      "parameters": {
        "content": "# Color Legend",
        "height": 80,
        "width": 288,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2864,
        -2000
      ],
      "id": "22546522-67d6-409f-8060-e494bfad8c39",
      "name": "Sticky Note14"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('aos_prompts_and_context').item.json.aos_prompts_and_contexts.aos_agents.spielberg.chat_memory_session_id }}",
        "tableName": "={{ $('aos_prompts_and_context').item.json.aos_prompts_and_contexts.aos_system_contexts.agent_memories_supabase_table }}",
        "contextWindowLength": "=16"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        912,
        -1408
      ],
      "id": "214db508-afc5-4f3c-a8a5-52f02170e289",
      "name": "Postgres Memory - Spielberg",
      "credentials": {
        "postgres": {
          "id": "85Tuim46hYnLqadX",
          "name": "Postgres via Supabase — AO"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('aos_prompts_and_context').item.json.aos_prompts_and_contexts.aos_agents.tars.chat_memory_session_id }}",
        "tableName": "={{ $('aos_prompts_and_context').item.json.aos_prompts_and_contexts.aos_system_contexts.agent_memories_supabase_table }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        1872,
        -736
      ],
      "id": "281ec200-1997-4349-be96-51daaaea45f5",
      "name": "Postgres Memory - Tars",
      "credentials": {
        "postgres": {
          "id": "85Tuim46hYnLqadX",
          "name": "Postgres via Supabase — AO"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('aos_prompts_and_context').item.json.aos_prompts_and_contexts.agents.agents[9].chat_memory_session_id }}",
        "tableName": "={{ $('aos_prompts_and_context').item.json.aos_prompts_and_contexts.aos_system_contexts.agent_memories_supabase_table }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        1232,
        -768
      ],
      "id": "3b9151ff-080c-4e6c-b398-03c6daf248c3",
      "name": "Postgres Memory - Britt",
      "credentials": {
        "postgres": {
          "id": "85Tuim46hYnLqadX",
          "name": "Postgres via Supabase — AO"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('aos_prompts_and_context').item.json.aos_prompts_and_contexts.agents.agents[8].chat_memory_session_id }}",
        "tableName": "={{ $('aos_prompts_and_context').item.json.aos_prompts_and_contexts.aos_system_contexts.agent_memories_supabase_table }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        816,
        -736
      ],
      "id": "5672784d-44df-494d-9c6f-59a26237f99f",
      "name": "Postgres Memory - Forest",
      "credentials": {
        "postgres": {
          "id": "85Tuim46hYnLqadX",
          "name": "Postgres via Supabase — AO"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "=<data_manager_multi_sheet_agent>\nYou are a hands-on data ops agent for a media production studio. You control a single Google Sheets workbook that contains 6 sheets and CRUD tools for each. Your job: interpret natural language and immediately perform the necessary tool calls to keep the pipeline flowing from ideation to publish.\n\n## Sheets & Tools (exact names)\n- IDEAS:     Get Ideas | Create Idea1 | Update Idea1 | Delete Idea\n- PROJECTS:  Get Projects | Create Project | Update Project | Delete Project\n- DRAFTS:    Get Drafts | Create Draft | Update Draft | Delete Draft\n- LOCKS:     Get Locks | Create Lock | Update Lock | Delete Lock\n- RUNS:      Get Run | Create Run | Update Run1 | Delete Run\n- FINALS:    Get Finals | Create Final | Update Final | Delete Final\n\n## Minimal column model (use what exists; add only these if blank)\n- All sheets: id (uuid), name/title, notes/description, status, created_at (ISO), updated_at (ISO)\n- Parent links:\n  - Projects: idea_id\n  - Drafts: project_id\n  - Locks: draft_id, project_id (optional convenience)\n  - Runs: lock_id, project_id (optional)\n  - Finals: run_id, lock_id, project_id (optional)\n- Versioning helpers:\n  - Drafts: version (e.g., 0.3)\n  - Locks: version_tag (e.g., v1.0)\n  - Runs: batch_no / attempt_no (ints)\n  - Finals: package_name / publish_state\n\nIf a column is missing in the sheet, don’t fail—write what you can. If extra columns exist, leave them untouched unless the user provided values.\n\n## Lifecycle rules (fast path)\n1) Idea → Project\n   - When a user “greenlights” an idea, create a Project linked by idea_id. If idea doesn’t exist but intent is clear, create it first.\n2) Project → Draft(s)\n   - “Start a draft / new draft” creates a Draft linked to project_id. Multiple drafts per project are allowed.\n3) Draft → Lock (version lock)\n   - “Lock it / freeze version / create vX.Y” creates a Lock from the selected Draft. Record draft_id and version_tag.\n4) Lock → Run(s)\n   - “Run production / generate outputs N” creates a Run linked to lock_id (and project_id if handy). You may store counts/targets as notes.\n5) Runs → Final package\n   - “Assemble finals / finalize / mark for publish” creates a Final linked to a chosen Run (and its lock). Store selection decisions in notes.\n\nYou may auto-create missing ancestors if the user intent implies them. Prefer to re-use existing rows when names/ids clearly match.\n\n## Behaviors\n- **Do work immediately.** Don’t ask for confirmation unless the user sounds unsure.\n- **Infer intent** (create/read/update/delete) + **target sheet** + **parents** from the user’s words.\n- If multiple candidates match, pick the most recent (by created_at) unless the user specifies otherwise.\n- **IDs**: generate UUIDs client-side when creating. Return them to the user.\n- **Timestamps**: set `created_at` on create and always refresh `updated_at` on any change.\n- **Status**: accept any string (e.g., “backlog”, “active”, “review”, “approved”, “locked”, “queued”, “succeeded”, “ready_for_publish”, “published”). Don’t enforce a fixed set.\n- **Cascade deletes** only if the user explicitly asks; otherwise perform single-row deletes.\n- **Upserts**: if the user says “update X (or create if missing)”, search; if not found, create.\n\n## How to choose tools\n- READ → use the corresponding “Get …” tool and then proceed (e.g., to find a row for update/delete).\n- CREATE → use the corresponding “Create …” tool with all fields you can infer + generated id + timestamps + FK(s).\n- UPDATE → find by id or exact name; then call the “Update …” tool with changed fields + refreshed updated_at.\n- DELETE → find by id or exact name; then call “Delete …”. (No confirmation needed unless the user says “are you sure?”)\n\n## Disambiguation heuristics\n- When given a human label (“AI Beats intro draft”), prefer matching by exact name/title on the relevant sheet.\n- If both id and name are given, trust the id.\n- If only a parent is provided, create a sensible child name (e.g., “Draft for <project name> v0.1”, “Lock v1.0 for <draft>”, “Run #1 for <lock>”, “Final package for <run>”).\n- Keep names short and unique; if collision, append a short hash.\n\n## Auto-enrichment\n- Accept tags, priority, counts (e.g., “make 12 deliverables”), platforms, formats; store them in notes/description if no dedicated column exists.\n- When the user references “the latest”, interpret as the most recent item in that category under the same parent.\n\n## Output to user (after every action)\n- A 1–3 line confirmation with: action, sheet, primary name, id, and any key links (e.g., project_id, draft_id, lock_id).\n- If you created multiple rows (e.g., “make 10 runs”), summarize count and return the ids.\n\n## Examples (not strict)\n- “New idea ‘AI Beats’ (priority high). Greenlight it as a project.”\n  → Create Idea; then Create Project linked to idea_id.\n- “Start a draft v0.1 for AI Beats project.”\n  → Create Draft with project_id, version=0.1.\n- “Lock current draft as v1.0.”\n  → Create Lock from most recent Draft of the active project.\n- “Run production for v1.0 with 12 outputs.”\n  → Create Run with lock_id; note “12 outputs planned”.\n- “Assemble finals from the best outputs of the last run; mark ready_for_publish.”\n  → Create Final linked to latest Run; status=ready_for_publish.\n\n## Error handling (lightweight)\n- If nothing is found, create as requested.\n- If a sheet/tool errors, try once more with minimal fields; if still failing, tell the user what you tried and what to provide next (id or exact name).\n\nOperate decisively. Keep the pipeline moving from Ideas → Projects → Drafts → Locks → Runs → Finals with minimal friction.\n</data_manager_multi_sheet_agent>\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        3952,
        -912
      ],
      "id": "a4b4d6d6-ab7b-4100-85b3-01f6ad47ec5e",
      "name": "Data Mngr (efficient)"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-5-mini",
          "mode": "list",
          "cachedResultName": "gpt-5-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        3952,
        -704
      ],
      "id": "491b13b9-4f36-49b1-9a28-dd83a080040f",
      "name": "gpt5-mini",
      "credentials": {
        "openAiApi": {
          "id": "O38qltZmjubnlhtn",
          "name": "OpenAI (Bredcrums Org.)"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "documentId": {
          "__rl": true,
          "value": "1w82Pi6QCWA14pqw7imAfh-UFhQ3WzcWwq6VSKVApLm0",
          "mode": "list",
          "cachedResultName": "protoyping of AO Studios V2 — Content Creation Tracker",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1w82Pi6QCWA14pqw7imAfh-UFhQ3WzcWwq6VSKVApLm0/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Sheet', `The only possible sheet choices are ideas, projects, working_drafts, version_locks, production_runs, final_packages.`, 'string') }}",
          "mode": "id"
        },
        "startIndex": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start_Row_Number', ``, 'number') }}",
        "numberToDelete": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Number_of_Rows_to_Delete', ``, 'number') }}"
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        4336,
        -512
      ],
      "id": "f6c6342d-2226-405d-8791-ea0db9a4a7b5",
      "name": "Delete Data",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "SmV2UM0V7zCsRueD",
          "name": "AO Google Sheets"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1w82Pi6QCWA14pqw7imAfh-UFhQ3WzcWwq6VSKVApLm0",
          "mode": "list",
          "cachedResultName": "protoyping of AO Studios V2 — Content Creation Tracker",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1w82Pi6QCWA14pqw7imAfh-UFhQ3WzcWwq6VSKVApLm0/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Sheet', `The only possible sheet choices are ideas, projects, working_drafts, version_locks, production_runs, final_packages.`, 'string') }}",
          "mode": "id"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "row_number": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('row_number__using_to_match_', ``, 'number') }}",
            "working_title": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('working_title', ``, 'string') }}",
            "author": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('author', ``, 'string') }}",
            "last_updated": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('last_updated', ``, 'string') }}",
            "created_at": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('created_at', ``, 'string') }}",
            "status": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('status', ``, 'string') }}",
            "additional_notes": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('additional_notes', ``, 'string') }}",
            "description": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('description', ``, 'string') }}",
            "logline": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('logline', ``, 'string') }}"
          },
          "matchingColumns": [
            "row_number"
          ],
          "schema": [
            {
              "id": "working_title",
              "displayName": "working_title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "logline",
              "displayName": "logline",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "description",
              "displayName": "description",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "additional_notes",
              "displayName": "additional_notes",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "last_updated",
              "displayName": "last_updated",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "author",
              "displayName": "author",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        4208,
        -512
      ],
      "id": "89b4d8e6-e612-4999-a2f4-fcb7da9b63fb",
      "name": "Update Data",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "SmV2UM0V7zCsRueD",
          "name": "AO Google Sheets"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1bAQwpVD4lERURH2bfN0xri-IUPwmkZDsSpUtXBhDsj8",
          "mode": "list",
          "cachedResultName": "AO Studios V2 — Content Creation Tracker",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1bAQwpVD4lERURH2bfN0xri-IUPwmkZDsSpUtXBhDsj8/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Sheet', `The only possible sheet choices are: \n[\n  \"ideas\",\n  \"projects\",\n  \"working_drafts\",\n  \"version_locks\",\n  \"production_runs\",\n  \"final_packages\"\n]`, 'string') }}",
          "mode": "name"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        4080,
        -512
      ],
      "id": "e6fca706-12f7-4839-8371-e5238ff93fad",
      "name": "Create Data",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "SmV2UM0V7zCsRueD",
          "name": "AO Google Sheets"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1w82Pi6QCWA14pqw7imAfh-UFhQ3WzcWwq6VSKVApLm0",
          "mode": "list",
          "cachedResultName": "protoyping of AO Studios V2 — Content Creation Tracker",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1w82Pi6QCWA14pqw7imAfh-UFhQ3WzcWwq6VSKVApLm0/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Sheet', `The only possible sheet choices are ideas, projects, working_drafts, version_locks, production_runs, final_packages.`, 'string') }}",
          "mode": "name"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        3952,
        -512
      ],
      "id": "b5c783aa-77b9-4b2e-b8d2-e4c3222bbb52",
      "name": "Get Data",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "SmV2UM0V7zCsRueD",
          "name": "AO Google Sheets"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "211683f6-3fea-4807-9b77-8248cf88f9f8",
              "name": "sheetPages",
              "value": "=[\n  \"ideas\",\n  \"projects\",\n  \"working_drafts\",\n  \"version_locks\",\n  \"production_runs\",\n  \"final_packages\"\n]",
              "type": "array"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3584,
        -912
      ],
      "id": "65f690f5-59cc-4dc3-a61b-fe9ca7d680c1",
      "name": "Edit"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1w82Pi6QCWA14pqw7imAfh-UFhQ3WzcWwq6VSKVApLm0",
          "mode": "list",
          "cachedResultName": "protoyping of AO Studios V2 — Content Creation Tracker",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1w82Pi6QCWA14pqw7imAfh-UFhQ3WzcWwq6VSKVApLm0/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 297625840,
          "mode": "list",
          "cachedResultName": "projects",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1w82Pi6QCWA14pqw7imAfh-UFhQ3WzcWwq6VSKVApLm0/edit#gid=297625840"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "project_id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('project_id', ``, 'string') }}",
            "project_title": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('project_title', ``, 'string') }}",
            "created_at": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('created_at', ``, 'string') }}",
            "status": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('status', ``, 'string') }}",
            "additional_info": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('additional_info', ``, 'string') }}",
            "description": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('description', ``, 'string') }}",
            "logline": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('logline', ``, 'string') }}",
            "internal_context_reference": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('internal_context_reference', ``, 'string') }}",
            "notes_by_code": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('notes_by_code', ``, 'string') }}",
            "notes_by_ai": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('notes_by_ai', ``, 'string') }}",
            "notes_by_human": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('notes_by_human', ``, 'string') }}",
            "draft_folders": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('draft_folders', ``, 'string') }}",
            "drive_folder_id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('drive_folder_id', ``, 'string') }}",
            "drive_folder_url": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('drive_folder_url', ``, 'string') }}",
            "deadline": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('deadline', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "project_id",
              "displayName": "project_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "project_title",
              "displayName": "project_title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "logline",
              "displayName": "logline",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "description",
              "displayName": "description",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "additional_info",
              "displayName": "additional_info",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "deadline",
              "displayName": "deadline",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "drive_folder_url",
              "displayName": "drive_folder_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "drive_folder_id",
              "displayName": "drive_folder_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "draft_folders",
              "displayName": "draft_folders",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "notes_by_human",
              "displayName": "notes_by_human",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "notes_by_ai",
              "displayName": "notes_by_ai",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "notes_by_code",
              "displayName": "notes_by_code",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "internal_context_reference",
              "displayName": "internal_context_reference",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        4080,
        -160
      ],
      "id": "4c436bb0-d006-4334-91e8-59fd188b688d",
      "name": "Create Project1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "SmV2UM0V7zCsRueD",
          "name": "AO Google Sheets"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1w82Pi6QCWA14pqw7imAfh-UFhQ3WzcWwq6VSKVApLm0",
          "mode": "list",
          "cachedResultName": "protoyping of AO Studios V2 — Content Creation Tracker",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1w82Pi6QCWA14pqw7imAfh-UFhQ3WzcWwq6VSKVApLm0/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1706833144,
          "mode": "list",
          "cachedResultName": "working_drafts",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1w82Pi6QCWA14pqw7imAfh-UFhQ3WzcWwq6VSKVApLm0/edit#gid=1706833144"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "working_draft_id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('working_draft_id', ``, 'string') }}",
            "draft_title": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('draft_title', ``, 'string') }}",
            "draft_shot_list": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('draft_shot_list', ``, 'string') }}",
            "shot_list_last_updated": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('shot_list_last_updated', ``, 'string') }}",
            "last_workflow_execution_id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('last_workflow_execution_id', ``, 'string') }}",
            "caption_optional": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('caption_optional', ``, 'string') }}",
            "additional_notes": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('additional_notes', ``, 'string') }}",
            "media_gen_prompts": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('media_gen_prompts', ``, 'string') }}",
            "treatment": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('treatment', ``, 'string') }}",
            "creative_brief": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('creative_brief', ``, 'string') }}",
            "tech_specs_and_reqs": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('tech_specs_and_reqs', ``, 'string') }}",
            "content_format": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('content_format', ``, 'string') }}",
            "publish_platform": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('publish_platform', ``, 'string') }}",
            "internal_desc": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('internal_desc', ``, 'string') }}",
            "internal_aka_refs_tags": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('internal_aka_refs_tags', ``, 'string') }}",
            "notes_by_code": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('notes_by_code', ``, 'string') }}",
            "notes_by_ai": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('notes_by_ai', ``, 'string') }}",
            "notes_by_human": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('notes_by_human', ``, 'string') }}",
            "shotlist_status": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('shotlist_status', ``, 'string') }}",
            "draft_status": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('draft_status', ``, 'string') }}",
            "release_date": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('release_date', ``, 'string') }}",
            "draft_due": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('draft_due', ``, 'string') }}",
            "created_at": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('created_at', ``, 'string') }}",
            "project_draft_no": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('project_draft_no', ``, 'string') }}",
            "project_id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('project_id', ``, 'string') }}",
            "project_title": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('project_title', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "working_draft_id",
              "displayName": "working_draft_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "draft_title",
              "displayName": "draft_title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "project_title",
              "displayName": "project_title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "project_id",
              "displayName": "project_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "project_draft_no",
              "displayName": "project_draft_no",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "draft_due",
              "displayName": "draft_due",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "release_date",
              "displayName": "release_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "draft_status",
              "displayName": "draft_status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "shotlist_status",
              "displayName": "shotlist_status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "notes_by_human",
              "displayName": "notes_by_human",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "notes_by_ai",
              "displayName": "notes_by_ai",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "notes_by_code",
              "displayName": "notes_by_code",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "internal_aka_refs_tags",
              "displayName": "internal_aka_refs_tags",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "internal_desc",
              "displayName": "internal_desc",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "publish_platform",
              "displayName": "publish_platform",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "content_format",
              "displayName": "content_format",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "tech_specs_and_reqs",
              "displayName": "tech_specs_and_reqs",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "creative_brief",
              "displayName": "creative_brief",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "treatment",
              "displayName": "treatment",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "media_gen_prompts",
              "displayName": "media_gen_prompts",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "additional_notes",
              "displayName": "additional_notes",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "caption_optional",
              "displayName": "caption_optional",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "last_workflow_execution_id",
              "displayName": "last_workflow_execution_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "shot_list_last_updated",
              "displayName": "shot_list_last_updated",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "draft_shot_list",
              "displayName": "draft_shot_list",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        4080,
        16
      ],
      "id": "9bce6180-dac7-4cc1-a214-0c12a58f4dd0",
      "name": "Create Draft1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "SmV2UM0V7zCsRueD",
          "name": "AO Google Sheets"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1w82Pi6QCWA14pqw7imAfh-UFhQ3WzcWwq6VSKVApLm0",
          "mode": "list",
          "cachedResultName": "protoyping of AO Studios V2 — Content Creation Tracker",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1w82Pi6QCWA14pqw7imAfh-UFhQ3WzcWwq6VSKVApLm0/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 2138703257,
          "mode": "list",
          "cachedResultName": "production_runs",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1w82Pi6QCWA14pqw7imAfh-UFhQ3WzcWwq6VSKVApLm0/edit#gid=2138703257"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "completed_at": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('completed_at', ``, 'string') }}",
            "updated_at": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('updated_at', ``, 'string') }}",
            "created_at": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('created_at', ``, 'string') }}",
            "runs_completed_manifest": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('runs_completed_manifest', ``, 'string') }}",
            "run_shot_list_drive_file_id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('run_shot_list_drive_file_id', ``, 'string') }}",
            "elmnts_no": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('elmnts_no', ``, 'string') }}",
            "seqs_no": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('seqs_no', ``, 'string') }}",
            "delivs_no": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('delivs_no', ``, 'string') }}",
            "run_type": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('run_type', ``, 'string') }}",
            "last_wf_exec_id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('last_wf_exec_id', ``, 'string') }}",
            "internal_desc": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('internal_desc', ``, 'string') }}",
            "internal_aka_refs_tags": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('internal_aka_refs_tags', ``, 'string') }}",
            "notes_by_code": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('notes_by_code', ``, 'string') }}",
            "notes_by_ai": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('notes_by_ai', ``, 'string') }}",
            "notes_by_human": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('notes_by_human', ``, 'string') }}",
            "run_id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('run_id', ``, 'string') }}",
            "run_status": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('run_status', ``, 'string') }}",
            "run_name": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('run_name', ``, 'string') }}",
            "project_run_order_no": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('project_run_order_no', ``, 'string') }}",
            "prod_ver_lock_id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('prod_ver_lock_id', ``, 'string') }}",
            "prod_ver_lock_no": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('prod_ver_lock_no', ``, 'string') }}",
            "wrk_drft_id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('wrk_drft_id', ``, 'string') }}",
            "project_prod_ver_lock_order_no": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('project_prod_ver_lock_order_no', ``, 'string') }}",
            "wrk_drft_no": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('wrk_drft_no', ``, 'string') }}",
            "project_wrk_drft_order_no": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('project_wrk_drft_order_no', ``, 'string') }}",
            "project_id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('project_id', ``, 'string') }}",
            "project_no": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('project_no', ``, 'string') }}",
            "project_name": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('project_name', ``, 'string') }}",
            "idea": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('idea', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "idea",
              "displayName": "idea",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "project_name",
              "displayName": "project_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "project_no",
              "displayName": "project_no",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "project_id",
              "displayName": "project_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "project_wrk_drft_order_no",
              "displayName": "project_wrk_drft_order_no",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "wrk_drft_no",
              "displayName": "wrk_drft_no",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "wrk_drft_id",
              "displayName": "wrk_drft_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "project_prod_ver_lock_order_no",
              "displayName": "project_prod_ver_lock_order_no",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "prod_ver_lock_no",
              "displayName": "prod_ver_lock_no",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "prod_ver_lock_id",
              "displayName": "prod_ver_lock_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "project_run_order_no",
              "displayName": "project_run_order_no",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "run_name",
              "displayName": "run_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "run_status",
              "displayName": "run_status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "run_id",
              "displayName": "run_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "notes_by_human",
              "displayName": "notes_by_human",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "notes_by_ai",
              "displayName": "notes_by_ai",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "notes_by_code",
              "displayName": "notes_by_code",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "internal_aka_refs_tags",
              "displayName": "internal_aka_refs_tags",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "internal_desc",
              "displayName": "internal_desc",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "last_wf_exec_id",
              "displayName": "last_wf_exec_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "run_type",
              "displayName": "run_type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "delivs_no",
              "displayName": "delivs_no",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "seqs_no",
              "displayName": "seqs_no",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "elmnts_no",
              "displayName": "elmnts_no",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "run_shot_list_drive_file_id",
              "displayName": "run_shot_list_drive_file_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "runs_completed_manifest",
              "displayName": "runs_completed_manifest",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "updated_at",
              "displayName": "updated_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "completed_at",
              "displayName": "completed_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        4080,
        368
      ],
      "id": "4cfc2c9a-2e06-4430-bd00-53d3c5cfb9a6",
      "name": "Create Run1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "SmV2UM0V7zCsRueD",
          "name": "AO Google Sheets"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1bAQwpVD4lERURH2bfN0xri-IUPwmkZDsSpUtXBhDsj8",
          "mode": "list",
          "cachedResultName": "AO Studios V2 — Content Creation Tracker",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1bAQwpVD4lERURH2bfN0xri-IUPwmkZDsSpUtXBhDsj8/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 177585841,
          "mode": "list",
          "cachedResultName": "production_version_locks",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1bAQwpVD4lERURH2bfN0xri-IUPwmkZDsSpUtXBhDsj8/edit#gid=177585841"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "prod_ver_lock_no": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('prod_ver_lock_no', ``, 'string') }}",
            "last_workflow_execution_id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('last_workflow_execution_id', ``, 'string') }}",
            "all_generated_deliverables": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('all_generated_deliverables', ``, 'string') }}",
            "choice_of_package_deliverables": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('choice_of_package_deliverables', ``, 'string') }}",
            "prod_ver_lock_type": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('prod_ver_lock_type', ``, 'string') }}",
            "pv_lock_shot_list_drive_file_id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('pv_lock_shot_list_drive_file_id', ``, 'string') }}",
            "prod_ver_lock_google_drive_folder_id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('prod_ver_lock_google_drive_folder_id', ``, 'string') }}",
            "updated_at": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('updated_at', ``, 'string') }}",
            "created_at": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('created_at', ``, 'string') }}",
            "prod_ver_lock_name": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('prod_ver_lock_name', ``, 'string') }}",
            "internal_desc": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('internal_desc', ``, 'string') }}",
            "internal_aka_refs_tags": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('internal_aka_refs_tags', ``, 'string') }}",
            "notes_by_code": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('notes_by_code', ``, 'string') }}",
            "notes_by_ai": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('notes_by_ai', ``, 'string') }}",
            "notes_by_human": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('notes_by_human', ``, 'string') }}",
            "prod_ver_lock_approval_status": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('prod_ver_lock_approval_status', ``, 'string') }}",
            "prod_ver_lock_status": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('prod_ver_lock_status', ``, 'string') }}",
            "prod_ver_lock_id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('prod_ver_lock_id', ``, 'string') }}",
            "project_prod_ver_lock_order_no": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('project_prod_ver_lock_order_no', ``, 'string') }}",
            "wrk_drft_id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('wrk_drft_id', ``, 'string') }}",
            "wrk_drft_no": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('wrk_drft_no', ``, 'string') }}",
            "project_wrk_drft_order_no": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('project_wrk_drft_order_no', ``, 'string') }}",
            "project_id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('project_id', ``, 'string') }}",
            "project_no": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('project_no', ``, 'string') }}",
            "project_name": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('project_name', ``, 'string') }}",
            "idea": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('idea', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "prod_ver_lock_no",
              "displayName": "prod_ver_lock_no",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "idea",
              "displayName": "idea",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "project_name",
              "displayName": "project_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "project_no",
              "displayName": "project_no",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "project_id",
              "displayName": "project_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "project_wrk_drft_order_no",
              "displayName": "project_wrk_drft_order_no",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "wrk_drft_no",
              "displayName": "wrk_drft_no",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "wrk_drft_id",
              "displayName": "wrk_drft_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "project_prod_ver_lock_order_no",
              "displayName": "project_prod_ver_lock_order_no",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "prod_ver_lock_id",
              "displayName": "prod_ver_lock_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "prod_ver_lock_status",
              "displayName": "prod_ver_lock_status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "prod_ver_lock_approval_status",
              "displayName": "prod_ver_lock_approval_status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "notes_by_human",
              "displayName": "notes_by_human",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "notes_by_ai",
              "displayName": "notes_by_ai",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "notes_by_code",
              "displayName": "notes_by_code",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "internal_aka_refs_tags",
              "displayName": "internal_aka_refs_tags",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "internal_desc",
              "displayName": "internal_desc",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "prod_ver_lock_name",
              "displayName": "prod_ver_lock_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "updated_at",
              "displayName": "updated_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "prod_ver_lock_google_drive_folder_id",
              "displayName": "prod_ver_lock_google_drive_folder_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "pv_lock_shot_list_drive_file_id",
              "displayName": "pv_lock_shot_list_drive_file_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "prod_ver_lock_type",
              "displayName": "prod_ver_lock_type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "choice_of_package_deliverables",
              "displayName": "choice_of_package_deliverables",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "all_generated_deliverables",
              "displayName": "all_generated_deliverables",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "last_workflow_execution_id",
              "displayName": "last_workflow_execution_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        4080,
        192
      ],
      "id": "df32ba37-0386-42eb-98c7-ca6c65939d7a",
      "name": "Create Lock1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "SmV2UM0V7zCsRueD",
          "name": "AO Google Sheets"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1w82Pi6QCWA14pqw7imAfh-UFhQ3WzcWwq6VSKVApLm0",
          "mode": "list",
          "cachedResultName": "protoyping of AO Studios V2 — Content Creation Tracker",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1w82Pi6QCWA14pqw7imAfh-UFhQ3WzcWwq6VSKVApLm0/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1825956263,
          "mode": "list",
          "cachedResultName": "final_packages",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1bAQwpVD4lERURH2bfN0xri-IUPwmkZDsSpUtXBhDsj8/edit#gid=1825956263"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "final_pkg_id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('final_pkg_id', ``, 'string') }}",
            "final_pkg_title": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('final_pkg_title', ``, 'string') }}",
            "project_name": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('project_name', ``, 'string') }}",
            "project_no": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('project_no', ``, 'string') }}",
            "project_id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('project_id', ``, 'string') }}",
            "working_draft_id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('working_draft_id', ``, 'string') }}",
            "version_lock_id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('version_lock_id', ``, 'string') }}",
            "last_workflow_execution_id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('last_workflow_execution_id', ``, 'string') }}",
            "cdn_post_submission_id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('cdn_post_submission_id', ``, 'string') }}",
            "final_package_manifest": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('final_package_manifest', ``, 'string') }}",
            "Caption": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Caption', ``, 'string') }}",
            "schedule_release_date_at": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('schedule_release_date_at', ``, 'string') }}",
            "cdn_method": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('cdn_method', ``, 'string') }}",
            "final_pkg_type": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('final_pkg_type', ``, 'string') }}",
            "final_drive_folder_id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('final_drive_folder_id', ``, 'string') }}",
            "updated_at": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('updated_at', ``, 'string') }}",
            "published_to_cdn_at": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('published_to_cdn_at', ``, 'string') }}",
            "created_at": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('created_at', ``, 'string') }}",
            "platform": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('platform', ``, 'string') }}",
            "package_format": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('package_format', ``, 'string') }}",
            "final_pkg_name": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('final_pkg_name', ``, 'string') }}",
            "notes_by_code": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('notes_by_code', ``, 'string') }}",
            "notes_by_ai": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('notes_by_ai', ``, 'string') }}",
            "notes_by_human": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('notes_by_human', ``, 'string') }}",
            "final_pkg_approval_status": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('final_pkg_approval_status', ``, 'string') }}",
            "final_pkg_status": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('final_pkg_status', ``, 'string') }}",
            "project_final_pkg_order_no": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('project_final_pkg_order_no', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "final_pkg_id",
              "displayName": "final_pkg_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "final_pkg_title",
              "displayName": "final_pkg_title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "project_name",
              "displayName": "project_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "project_no",
              "displayName": "project_no",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "project_id",
              "displayName": "project_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "working_draft_id",
              "displayName": "working_draft_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "version_lock_id",
              "displayName": "version_lock_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "project_final_pkg_order_no",
              "displayName": "project_final_pkg_order_no",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "final_pkg_status",
              "displayName": "final_pkg_status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "final_pkg_approval_status",
              "displayName": "final_pkg_approval_status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "notes_by_human",
              "displayName": "notes_by_human",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "notes_by_ai",
              "displayName": "notes_by_ai",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "notes_by_code",
              "displayName": "notes_by_code",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "final_pkg_name",
              "displayName": "final_pkg_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "package_format",
              "displayName": "package_format",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "platform",
              "displayName": "platform",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "published_to_cdn_at",
              "displayName": "published_to_cdn_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "updated_at",
              "displayName": "updated_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "final_drive_folder_id",
              "displayName": "final_drive_folder_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "final_pkg_type",
              "displayName": "final_pkg_type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "schedule_release_date_at",
              "displayName": "schedule_release_date_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Caption",
              "displayName": "Caption",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "final_package_manifest",
              "displayName": "final_package_manifest",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "cdn_method",
              "displayName": "cdn_method",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "cdn_post_submission_id",
              "displayName": "cdn_post_submission_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "last_workflow_execution_id",
              "displayName": "last_workflow_execution_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        4080,
        544
      ],
      "id": "e3348dee-5f88-46c6-8fa8-41b64d92f6bd",
      "name": "Create Final1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "SmV2UM0V7zCsRueD",
          "name": "AO Google Sheets"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1w82Pi6QCWA14pqw7imAfh-UFhQ3WzcWwq6VSKVApLm0",
          "mode": "list",
          "cachedResultName": "protoyping of AO Studios V2 — Content Creation Tracker",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1w82Pi6QCWA14pqw7imAfh-UFhQ3WzcWwq6VSKVApLm0/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "ideas",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1w82Pi6QCWA14pqw7imAfh-UFhQ3WzcWwq6VSKVApLm0/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "author": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('author', ``, 'string') }}",
            "last_updated": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('last_updated', ``, 'string') }}",
            "created_at": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('created_at', ``, 'string') }}",
            "status": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('status', ``, 'string') }}",
            "additional_notes": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('additional_notes', ``, 'string') }}",
            "description": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('description', ``, 'string') }}",
            "logline": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('logline', ``, 'string') }}",
            "working_title": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('working_title', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "working_title",
              "displayName": "working_title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "logline",
              "displayName": "logline",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "description",
              "displayName": "description",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "additional_notes",
              "displayName": "additional_notes",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "last_updated",
              "displayName": "last_updated",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "author",
              "displayName": "author",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        4080,
        -336
      ],
      "id": "3e289804-d2fe-4244-b898-0a10aec25eda",
      "name": "Create Idea2",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "SmV2UM0V7zCsRueD",
          "name": "AO Google Sheets"
        }
      }
    },
    {
      "parameters": {
        "content": "## Aug 27 2025 2:47pm: \n#### Due to the requirement of having at least 1 column value set when appending row, **creating data**, it is not possible to condense CREATE data actions the way that other CRUD data actions can be abstracted.",
        "height": 288,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4304,
        -912
      ],
      "id": "71c6ae6f-5baa-4e9d-bd12-b989f7ce41d9",
      "name": "Sticky Note15"
    },
    {
      "parameters": {
        "jsCode": "// Initialize the output arrays\nconst steps = [];\nconst tokens = [];\nlet totalTokens = 0;\n\n// Process each item in the input\nfor (const item of $input.all()) {\n  let data = item.json;\n  \n  // Check if the data is an array itself (like your example JSON)\n  if (Array.isArray(data)) {\n    // Process each object in the array\n    for (const obj of data) {\n      // Extract steps information\n      if (obj.intermediateSteps && Array.isArray(obj.intermediateSteps)) {\n        for (const step of obj.intermediateSteps) {\n          if (step.action) {\n            steps.push({\n              tool: step.action.tool,\n              toolInput: step.action.toolInput,\n              observation: step.observation\n            });\n          }\n        }\n      }\n      \n      // Extract token information - FIXED PATH\n      if (obj.intermediateSteps && Array.isArray(obj.intermediateSteps)) {\n        for (const step of obj.intermediateSteps) {\n          if (step.action && step.action.messageLog && Array.isArray(step.action.messageLog)) {\n            for (const message of step.action.messageLog) {\n              // Fixed: tokenUsage instead of usage, and camelCase field names\n              if (message.kwargs && message.kwargs.response_metadata && message.kwargs.response_metadata.tokenUsage) {\n                const tokenUsage = message.kwargs.response_metadata.tokenUsage;\n                tokens.push({\n                  prompt_tokens: tokenUsage.promptTokens,\n                  completion_tokens: tokenUsage.completionTokens,\n                  total_tokens: tokenUsage.totalTokens,\n                  model_name: message.kwargs.response_metadata.model_name\n                });\n                \n                // Add the tokens to our running total\n                if (typeof tokenUsage.totalTokens === 'number') {\n                  totalTokens += tokenUsage.totalTokens;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  } else {\n    // If data is not an array, process it as a single object\n    // Extract steps information\n    if (data.intermediateSteps && Array.isArray(data.intermediateSteps)) {\n      for (const step of data.intermediateSteps) {\n        if (step.action) {\n          steps.push({\n            tool: step.action.tool,\n            toolInput: step.action.toolInput,\n            observation: step.observation\n          });\n        }\n      }\n    }\n    \n    // Extract token information - FIXED PATH\n    if (data.intermediateSteps && Array.isArray(data.intermediateSteps)) {\n      for (const step of data.intermediateSteps) {\n        if (step.action && step.action.messageLog && Array.isArray(step.action.messageLog)) {\n          for (const message of step.action.messageLog) {\n            // Fixed: tokenUsage instead of usage, and camelCase field names\n            if (message.kwargs && message.kwargs.response_metadata && message.kwargs.response_metadata.tokenUsage) {\n              const tokenUsage = message.kwargs.response_metadata.tokenUsage;\n              tokens.push({\n                prompt_tokens: tokenUsage.promptTokens,\n                completion_tokens: tokenUsage.completionTokens,\n                total_tokens: tokenUsage.totalTokens,\n                model_name: message.kwargs.response_metadata.model_name\n              });\n              \n              // Add the tokens to our running total\n              if (typeof tokenUsage.totalTokens === 'number') {\n                totalTokens += tokenUsage.totalTokens;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n// Return the processed data with total_tokens included\nreturn [{\n  json: {\n    steps: steps,\n    tokens: tokens,\n    total_tokens: totalTokens\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1264,
        -1424
      ],
      "id": "6b4c0dea-7a08-4241-a838-77c1adc68fb6",
      "name": "Clean Up1"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1kzBW-0cB99TcrWLWQFAvjT52_jCGCLR0PbQ7s8bqWwY",
          "mode": "list",
          "cachedResultName": "AO Studios V2 — System Stats & Logs",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1kzBW-0cB99TcrWLWQFAvjT52_jCGCLR0PbQ7s8bqWwY/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1581498117,
          "mode": "list",
          "cachedResultName": "Agent Studio Swarm Actions",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1kzBW-0cB99TcrWLWQFAvjT52_jCGCLR0PbQ7s8bqWwY/edit#gid=1581498117"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Timestamp": "={{ $now.format('yyyy-MM-dd hh:m a') }}",
            "Workflow": "={{ $workflow.name }}",
            "Input": "={{ $('Telegram Trigger').item.json.message.text }}",
            "Output": "=Error Execution:{{ $execution.id }}",
            "Actions": "={{ JSON.stringify($json.steps, null, 2) }}",
            "Tokens": "={{ JSON.stringify($json.tokens, null, 2) }}",
            "Total Tokens": "={{ $json.total_tokens }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Timestamp",
              "displayName": "Timestamp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Workflow",
              "displayName": "Workflow",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Input",
              "displayName": "Input",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Output",
              "displayName": "Output",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Actions",
              "displayName": "Actions",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Tokens",
              "displayName": "Tokens",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Total Tokens",
              "displayName": "Total Tokens",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        1408,
        -1424
      ],
      "id": "5f0a09bd-c789-4745-9e96-780a7502332f",
      "name": "Update Log1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "i2bVwab0MxRJzwYf",
          "name": "Google Sheets AO OAuth2"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-5",
          "mode": "list",
          "cachedResultName": "gpt-5"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        608,
        -1408
      ],
      "id": "5181d114-f8e5-43b3-9b74-a2b82e3a821d",
      "name": "OpenAI GPT-5 (latest)",
      "credentials": {
        "openAiApi": {
          "id": "O38qltZmjubnlhtn",
          "name": "OpenAI (Bredcrums Org.)"
        }
      }
    },
    {
      "parameters": {
        "model": "openai/gpt-5",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        752,
        -1408
      ],
      "id": "3286f564-2f1e-4232-b692-6f63bf436cdc",
      "name": "OpenRouter GPT-5 (latest)",
      "credentials": {
        "openRouterApi": {
          "id": "pwj1L3d2Ror7G0eW",
          "name": "AO Workspace ALL | (@adamandjalen@gmail acc.)"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Time (Local): {{ $now.toLocal().format('LLL d yyyy h:mm a') }}\nTime (ISO): {{ $now.toLocal().toISO() }}\nMessage from: {{ $json.message_from }}\nMessage platform: {{ $json.messaging_platform }}\nQuery: {{ $json.text }}",
        "needsFallback": true,
        "options": {
          "systemMessage": "={{ $json.aos_prompts_and_contexts.aos_agents.spielberg.system_prompt }}\n\n## Final Reminders\nHere is the current date/time: {{ $now }}\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        832,
        -1568
      ],
      "id": "bd568a0a-ed38-41fc-8703-7730bc423445",
      "name": "Spielberg - Orchard Studios Director Orchestration Agent"
    },
    {
      "parameters": {
        "toolDescription": "An AI Agent that handles all tasks in Google Drive",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {
          "systemMessage": "=# Overview\nYou are an AI agent in charge of Google Drive actions. \n\n## Tools\n- Change Name: use this tool to change the name of a file. For this tool, you need the file ID and the new name. \n\n- Search Media: use this tool to search through the available pictures/videos. This tool helps you find information like the file ID and the new name. \n\n- Search Docs: use this tool to search through the available media analysis docs.\n\n- Share with Email: use this tool to share a file to an email address.\n\n- Share Anyone: use this tool to share a file with anyone as a viewer."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        800,
        -2080
      ],
      "id": "2ed4d813-9bff-4917-9960-4ac27767a749",
      "name": "Google Drive Agent"
    },
    {
      "parameters": {
        "operation": "update",
        "fileId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('File_to_Update', ``, 'string') }}"
        },
        "newUpdatedFileName": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('New_Updated_File_Name', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleDriveTool",
      "typeVersion": 3,
      "position": [
        976,
        -1904
      ],
      "id": "6ad310d3-0e82-4e6e-bb35-e7745b937b5d",
      "name": "Change Name",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "ScH2Khz6AL9njL5N",
          "name": "Google Drive — AO"
        }
      }
    },
    {
      "parameters": {
        "operation": "share",
        "fileId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('File', ``, 'string') }}"
        },
        "permissionsUi": {
          "permissionsValues": {
            "role": "reader",
            "type": "user",
            "emailAddress": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Email_Address', ``, 'string') }}"
          }
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDriveTool",
      "typeVersion": 3,
      "position": [
        976,
        -1760
      ],
      "id": "5435b553-3467-42cd-9f59-fd9751a28179",
      "name": "Share with Email",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "ScH2Khz6AL9njL5N",
          "name": "Google Drive — AO"
        }
      }
    },
    {
      "parameters": {
        "operation": "share",
        "fileId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('File', ``, 'string') }}"
        },
        "permissionsUi": {
          "permissionsValues": {
            "role": "reader",
            "type": "anyone"
          }
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDriveTool",
      "typeVersion": 3,
      "position": [
        864,
        -1760
      ],
      "id": "7b3f7764-1b01-4cb2-b17c-f3c695857644",
      "name": "Share Anyone",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "ScH2Khz6AL9njL5N",
          "name": "Google Drive — AO"
        }
      }
    },
    {
      "parameters": {
        "resource": "fileFolder",
        "returnAll": true,
        "filter": {
          "folderId": {
            "__rl": true,
            "value": "1Fm7PN1nMICKnAZpf6-3YYrSJlBEQ7Xbe",
            "mode": "list",
            "cachedResultName": "Media",
            "cachedResultUrl": "https://drive.google.com/drive/folders/1Fm7PN1nMICKnAZpf6-3YYrSJlBEQ7Xbe"
          }
        },
        "options": {
          "fields": [
            "id",
            "name"
          ]
        }
      },
      "type": "n8n-nodes-base.googleDriveTool",
      "typeVersion": 3,
      "position": [
        864,
        -1904
      ],
      "id": "903b24ee-d315-4866-9668-64a5fe3ca71a",
      "name": "Search Media",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "ScH2Khz6AL9njL5N",
          "name": "Google Drive — AO"
        }
      }
    },
    {
      "parameters": {
        "model": "openai/gpt-5-mini",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        752,
        -1904
      ],
      "id": "47791d2e-55c9-4b1f-9d45-48bb230f547f",
      "name": "GPT 5-mini1",
      "credentials": {
        "openRouterApi": {
          "id": "pwj1L3d2Ror7G0eW",
          "name": "AO Workspace ALL | (@adamandjalen@gmail acc.)"
        }
      }
    },
    {
      "parameters": {
        "resource": "fileFolder",
        "returnAll": true,
        "filter": {
          "folderId": {
            "__rl": true,
            "value": "1dgxFHKKunJbtvJl7nDjqSddlG2UROu3E",
            "mode": "list",
            "cachedResultName": "Media Analysis",
            "cachedResultUrl": "https://drive.google.com/drive/folders/1dgxFHKKunJbtvJl7nDjqSddlG2UROu3E"
          }
        },
        "options": {
          "fields": [
            "id",
            "name"
          ]
        }
      },
      "type": "n8n-nodes-base.googleDriveTool",
      "typeVersion": 3,
      "position": [
        752,
        -1760
      ],
      "id": "b252381b-91c6-4489-a34c-42cc1f959cd4",
      "name": "Search Docs",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "ScH2Khz6AL9njL5N",
          "name": "Google Drive — AO"
        }
      }
    },
    {
      "parameters": {
        "content": "## \"Hemenway\" - general writing",
        "height": 80,
        "width": 278
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -400,
        -720
      ],
      "id": "bd619261-b82b-4cc1-96ab-5e9ece3cf6f4",
      "name": "Sticky Note55"
    },
    {
      "parameters": {
        "content": "## Writing Room \n## (Paulina's AI Agent Tools)\n\n\n",
        "height": 1904,
        "width": 320,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -416,
        -1264
      ],
      "id": "02cd8bc9-5225-41b1-801d-1016e77112be",
      "name": "Sticky Note58"
    },
    {
      "parameters": {
        "content": "## \"Eddie\" - Quick Pitches and Sketches",
        "height": 80,
        "width": 278
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -400,
        -1152
      ],
      "id": "26fb9446-1480-4bf1-bccd-be0c525837c2",
      "name": "Sticky Note59"
    },
    {
      "parameters": {
        "content": "## \"Caesar\" - AI media-gen prompts",
        "height": 80,
        "width": 278
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -400,
        -256
      ],
      "id": "7e41fafa-95bd-40a0-a8c0-057c6660ed59",
      "name": "Sticky Note60"
    },
    {
      "parameters": {
        "content": "## \"Kim\" - Tech specs & content requirements",
        "height": 80,
        "width": 278
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -400,
        224
      ],
      "id": "db37a3a8-2a09-437c-990a-fd27e12cb7b9",
      "name": "Sticky Note65"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('aos_prompts_and_context').item.json.aos_prompts_and_contexts.aos_agents.caesar.chat_memory_session_id }}",
        "tableName": "={{ $('aos_prompts_and_context').item.json.aos_prompts_and_contexts.aos_system_contexts.agent_memories_supabase_table }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -288,
        80
      ],
      "id": "9a232019-23f4-48e1-a14b-f1820ebbc516",
      "name": "Postgres Memory - Caesar",
      "credentials": {
        "postgres": {
          "id": "85Tuim46hYnLqadX",
          "name": "Postgres via Supabase — AO"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('aos_prompts_and_context').item.json.aos_prompts_and_contexts.aos_agents.eddie.chat_memory_session_id }}",
        "tableName": "={{ $('aos_prompts_and_context').item.json.aos_prompts_and_contexts.aos_system_contexts.agent_memories_supabase_table }}",
        "contextWindowLength": "={{ $('aos_prompts_and_context').item.json.aos_prompts_and_contexts.aos_agents.default_ai_agent_values.postgres_chat_messages_context_length }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -304,
        -848
      ],
      "id": "a5d661da-ac4b-488f-8ddb-14cd5c40628a",
      "name": "Postgres Memory - Eddie",
      "credentials": {
        "postgres": {
          "id": "85Tuim46hYnLqadX",
          "name": "Postgres via Supabase — AO"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-5-mini",
          "mode": "list",
          "cachedResultName": "gpt-5-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -656,
        -704
      ],
      "id": "1a02f015-56a1-41ad-a3c9-f4095da67a53",
      "name": "OpenAI gpt-5-MINI1",
      "credentials": {
        "openAiApi": {
          "id": "O38qltZmjubnlhtn",
          "name": "OpenAI (Bredcrums Org.)"
        }
      }
    },
    {
      "parameters": {
        "model": "openai/gpt-5-mini",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -656,
        -512
      ],
      "id": "7fd10e36-f81a-4e8d-acf9-743c6cffc17a",
      "name": "OPR gpt-MINI2",
      "credentials": {
        "openRouterApi": {
          "id": "pwj1L3d2Ror7G0eW",
          "name": "AO Workspace ALL | (@adamandjalen@gmail acc.)"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1w82Pi6QCWA14pqw7imAfh-UFhQ3WzcWwq6VSKVApLm0",
          "mode": "list",
          "cachedResultName": "AO Studios V2 — Content Tracker",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1w82Pi6QCWA14pqw7imAfh-UFhQ3WzcWwq6VSKVApLm0/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1706833144,
          "mode": "list",
          "cachedResultName": "working_drafts",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1w82Pi6QCWA14pqw7imAfh-UFhQ3WzcWwq6VSKVApLm0/edit#gid=1706833144"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "working_draft_id",
              "lookupValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('values0_Value', ``, 'string') }}"
            },
            {
              "lookupColumn": "working_draft_title",
              "lookupValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('values1_Value', ``, 'string') }}"
            },
            {
              "lookupColumn": "project_id",
              "lookupValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('values2_Value', ``, 'string') }}"
            },
            {
              "lookupColumn": "internal_reference_info",
              "lookupValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('values4_Value', ``, 'string') }}"
            }
          ]
        },
        "combineFilters": "OR",
        "options": {
          "returnFirstMatch": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Return_only_First_Matching_Row', ``, 'boolean') }}"
        }
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        -16,
        -768
      ],
      "id": "f64c472a-8371-4059-abb4-fb3b243a4dc8",
      "name": "Get row(s) in sheet in Google Sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "i2bVwab0MxRJzwYf",
          "name": "Google Sheets AO OAuth2"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1w82Pi6QCWA14pqw7imAfh-UFhQ3WzcWwq6VSKVApLm0",
          "mode": "list",
          "cachedResultName": "AO Studios V2 — Content Tracker",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1w82Pi6QCWA14pqw7imAfh-UFhQ3WzcWwq6VSKVApLm0/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Sheet', ``, 'string') }}",
          "mode": "id"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "working_draft_id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('working_draft_id', ``, 'string') }}",
            "working_draft_title": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('working_draft_title', ``, 'string') }}",
            "draft_approve_status": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('draft_approve_status', ``, 'string') }}",
            "publish_platform": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('publish_platform', ``, 'string') }}",
            "publish_date": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('publish_date', ``, 'string') }}",
            "content_package_format": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('content_package_format', ``, 'string') }}",
            "deliverables_logline": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('deliverables_logline', ``, 'string') }}",
            "tech_specs_and_reqs": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('tech_specs_and_reqs', ``, 'string') }}",
            "treatment": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('treatment', ``, 'string') }}",
            "media_generation_prompts": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('media_generation_prompts', ``, 'string') }}",
            "additional_working_draft_notes": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('additional_working_draft_notes', ``, 'string') }}",
            "caption_optional": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('caption_optional', ``, 'string') }}",
            "drafts_drive_folder_url": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('drafts_drive_folder_url', ``, 'string') }}",
            "drafts_drive_folder_id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('drafts_drive_folder_id', ``, 'string') }}",
            "notes_by_human": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('notes_by_human', ``, 'string') }}",
            "notes_by_ai": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('notes_by_ai', ``, 'string') }}",
            "last_workflow_execution_id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('last_workflow_execution_id', `Include only if already updating another cell row value.`, 'string') }}",
            "project_working_draft_no": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('project_working_draft_no', ``, 'string') }}",
            "draft_status": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('draft_status', ``, 'string') }}",
            "draft_due": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('draft_due', ``, 'string') }}",
            "created_at": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('created_at', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "working_draft_id",
              "displayName": "working_draft_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "working_draft_title",
              "displayName": "working_draft_title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "project_title",
              "displayName": "project_title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "project_id",
              "displayName": "project_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "project_working_draft_no",
              "displayName": "project_working_draft_no",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "internal_reference_info",
              "displayName": "internal_reference_info",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "draft_status",
              "displayName": "draft_status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "draft_approve_status",
              "displayName": "draft_approve_status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "draft_due",
              "displayName": "draft_due",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "publish_date",
              "displayName": "publish_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "publish_platform",
              "displayName": "publish_platform",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "content_package_format",
              "displayName": "content_package_format",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "deliverables_logline",
              "displayName": "deliverables_logline",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "tech_specs_and_reqs",
              "displayName": "tech_specs_and_reqs",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "treatment",
              "displayName": "treatment",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "media_generation_prompts",
              "displayName": "media_generation_prompts",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "additional_working_draft_notes",
              "displayName": "additional_working_draft_notes",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "caption_optional",
              "displayName": "caption_optional",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "drafts_drive_folder_url",
              "displayName": "drafts_drive_folder_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "drafts_drive_folder_id",
              "displayName": "drafts_drive_folder_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "notes_by_human",
              "displayName": "notes_by_human",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "notes_by_ai",
              "displayName": "notes_by_ai",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "last_workflow_execution_id",
              "displayName": "last_workflow_execution_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        144,
        -768
      ],
      "id": "bc3893b5-7408-4060-b768-be6084d38bc6",
      "name": "Update row in sheet in Google Sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "i2bVwab0MxRJzwYf",
          "name": "Google Sheets AO OAuth2"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        400,
        -768
      ],
      "id": "995317c4-b07a-489c-ad3f-edd20b5508bb",
      "name": "Create Shot_List",
      "disabled": true
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        560,
        -768
      ],
      "id": "041dcfbe-61fd-4f6a-9bb8-1b79d0004437",
      "name": "Update Shot_List",
      "disabled": true
    },
    {
      "parameters": {
        "text": "=Data ID: {{ $fromAI(\"data_id\") }}\nQuery: {{ $fromAI(\"query\") }}\nAdditional Info: {{ $fromAI(\"additional_info\") }}\n\nCurrent Date/Time (ISO format): {{ $now.toUTC().toISO() }}",
        "needsFallback": true,
        "options": {
          "systemMessage": "={{ $('aos_prompts_and_context').item.json.aos_prompts_and_contexts.aos_agents.eddie.system_prompt }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        -400,
        -1056
      ],
      "id": "ca7bc7fd-021e-4e45-9824-fc740a54ba62",
      "name": "Eddie - Pitch & Sketch Writer Agent"
    },
    {
      "parameters": {
        "text": "=Data ID: {{ $fromAI(\"data_id\") }}\nQuery: {{ $fromAI(\"query\") }}\nAdditional Info: {{ $fromAI(\"additional_info\") }}\n\nCurrent Date/Time (ISO format): {{ $now.toUTC().toISO() }}",
        "needsFallback": true,
        "options": {
          "systemMessage": "={{ $('aos_prompts_and_context').item.json.aos_prompts_and_contexts.aos_agents.eddie.system_prompt }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        -384,
        -144
      ],
      "id": "ece9b4a5-32b5-44a7-a3f0-3789e4789089",
      "name": "Caesar - Prompt Engineering Agent1"
    },
    {
      "parameters": {
        "text": "=Data ID: {{ $fromAI(\"data_id\") }}\nQuery: {{ $fromAI(\"query\") }}\nAdditional Info: {{ $fromAI(\"additional_info\") }}\n\nCurrent Date/Time (ISO format): {{ $now.toUTC().toISO() }}",
        "needsFallback": true,
        "options": {
          "systemMessage": "You are a helpful assistant"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        -384,
        336
      ],
      "id": "a7ec2bb8-5271-4821-b3fb-f72eae3ab260",
      "name": "Kim - Technical Specifications Agent2"
    },
    {
      "parameters": {
        "text": "=Data ID: {{ $fromAI(\"data_id\") }}\nQuery: {{ $fromAI(\"query\") }}\nAdditional Info: {{ $fromAI(\"additional_info\") }}\n\nCurrent Date/Time (ISO format): {{ $now.toUTC().toISO() }}",
        "needsFallback": true,
        "options": {
          "systemMessage": "={{ $('aos_prompts_and_context').item.json.aos_prompts_and_contexts.aos_agents.paulina.system_prompt }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        0,
        -880
      ],
      "id": "166c0e3e-98d6-433a-80ab-f79cc4d8a1b6",
      "name": "Paulina - Treatment Agent"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('aos_prompts_and_context').item.json.aos_prompts_and_contexts.aos_agents.brittany.chat_memory_session_id }}",
        "tableName": "={{ $('aos_prompts_and_context').item.json.aos_prompts_and_contexts.aos_system_contexts.agent_memories_supabase_table }}",
        "contextWindowLength": "={{ $('aos_prompts_and_context').item.json.aos_prompts_and_contexts.aos_agents.default_ai_agent_values.postgres_chat_messages_context_length }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        160,
        -1024
      ],
      "id": "ce0affd2-26c6-4cc7-85f2-9720f72f0cb4",
      "name": "Postgres Memory - Paulina",
      "credentials": {
        "postgres": {
          "id": "85Tuim46hYnLqadX",
          "name": "Postgres via Supabase — AO"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1w82Pi6QCWA14pqw7imAfh-UFhQ3WzcWwq6VSKVApLm0",
          "mode": "list",
          "cachedResultName": "AO Studios V2 — Content Tracker",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1w82Pi6QCWA14pqw7imAfh-UFhQ3WzcWwq6VSKVApLm0/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1706833144,
          "mode": "list",
          "cachedResultName": "working_drafts",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1w82Pi6QCWA14pqw7imAfh-UFhQ3WzcWwq6VSKVApLm0/edit#gid=1706833144"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "working_draft_id": "={{ $fromAI('working_draft_id', ``, 'string') }}",
            "working_draft_title": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('working_draft_title', ``, 'string') }}",
            "project_title": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('project_title', ``, 'string') }}",
            "project_id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('project_id', ``, 'string') }}",
            "project_working_draft_no": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('project_working_draft_no', ``, 'string') }}",
            "internal_reference_info": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('internal_reference_info', ``, 'string') }}",
            "draft_approve_status": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('draft_approve_status', ``, 'string') }}",
            "created_at": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('created_at', ``, 'string') }}",
            "draft_due": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('draft_due', ``, 'string') }}",
            "caption_optional": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('caption_optional', ``, 'string') }}",
            "additional_working_draft_notes": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('additional_working_draft_notes', ``, 'string') }}",
            "media_generation_prompts": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('media_generation_prompts', ``, 'string') }}",
            "treatment": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('treatment', ``, 'string') }}",
            "tech_specs_and_reqs": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('tech_specs_and_reqs', ``, 'string') }}",
            "deliverables_logline": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('deliverables_logline', ``, 'string') }}",
            "content_package_format": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('content_package_format', ``, 'string') }}",
            "publish_date": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('publish_date', ``, 'string') }}",
            "publish_platform": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('publish_platform', ``, 'string') }}",
            "drafts_drive_folder_url": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('drafts_drive_folder_url', ``, 'string') }}",
            "last_workflow_execution_id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('last_workflow_execution_id', ``, 'string') }}",
            "notes_by_ai": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('notes_by_ai', ``, 'string') }}",
            "notes_by_human": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('notes_by_human', ``, 'string') }}",
            "drafts_drive_folder_id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('drafts_drive_folder_id', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "working_draft_id",
              "displayName": "working_draft_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "working_draft_title",
              "displayName": "working_draft_title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "project_title",
              "displayName": "project_title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "project_id",
              "displayName": "project_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "project_working_draft_no",
              "displayName": "project_working_draft_no",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "internal_reference_info",
              "displayName": "internal_reference_info",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "draft_status",
              "displayName": "draft_status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "draft_approve_status",
              "displayName": "draft_approve_status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "draft_due",
              "displayName": "draft_due",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "publish_date",
              "displayName": "publish_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "publish_platform",
              "displayName": "publish_platform",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "content_package_format",
              "displayName": "content_package_format",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "deliverables_logline",
              "displayName": "deliverables_logline",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "tech_specs_and_reqs",
              "displayName": "tech_specs_and_reqs",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "treatment",
              "displayName": "treatment",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "media_generation_prompts",
              "displayName": "media_generation_prompts",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "additional_working_draft_notes",
              "displayName": "additional_working_draft_notes",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "caption_optional",
              "displayName": "caption_optional",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "drafts_drive_folder_url",
              "displayName": "drafts_drive_folder_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "drafts_drive_folder_id",
              "displayName": "drafts_drive_folder_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "notes_by_human",
              "displayName": "notes_by_human",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "notes_by_ai",
              "displayName": "notes_by_ai",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "last_workflow_execution_id",
              "displayName": "last_workflow_execution_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        -16,
        -624
      ],
      "id": "407568dd-e4cb-4428-a2b7-9de5803c91fc",
      "name": "Append row in sheet in Google Sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "i2bVwab0MxRJzwYf",
          "name": "Google Sheets AO OAuth2"
        }
      }
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "VtqDp5dJIy3K37BF",
          "mode": "list",
          "cachedResultName": "MacGuyver - Shot List Agent As Workflow"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "chatId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('chatId', ``, 'string') }}",
            "query": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('query', ``, 'string') }}",
            "aos_prompts_and_contexts": "={{ $('aos_prompts_and_context').item.json.aos_prompts_and_contexts }}",
            "additional_info": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('additional_info', ``, 'string') }}",
            "id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('id', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "chatId",
              "displayName": "chatId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "query",
              "displayName": "query",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "additional_info",
              "displayName": "additional_info",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "aos_prompts_and_contexts",
              "displayName": "aos_prompts_and_contexts",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "object",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        496,
        -928
      ],
      "id": "846d9881-2e02-4ce4-baf8-a07b16a57ec7",
      "name": "MacGyver - Shot List Agent"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "HILRRX8H9Akkj76F",
          "mode": "list",
          "cachedResultName": "Artificial Orchard Studios — 🚧 Create Final Package"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [
            {
              "id": "working_draft_id",
              "displayName": "working_draft_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "project_title",
              "displayName": "project_title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "aos_system_contexts",
              "displayName": "aos_system_contexts",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "object"
            },
            {
              "id": "chat_id",
              "displayName": "chat_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        2400,
        -960
      ],
      "id": "ab5c8b99-2994-44fc-8ed5-5a422a5dad03",
      "name": "Create Final Package"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "vo879jiNXBDcDCy0",
          "mode": "list",
          "cachedResultName": "Artificial Orchard Studios — 🚧 Create Version Lock"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [
            {
              "id": "wrk_drft_id",
              "displayName": "wrk_drft_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true
            },
            {
              "id": "AO_Studio_Contexts_status_enums_status_enums_prod_ver_lock_status",
              "displayName": "AO_Studio_Contexts_status_enums_status_enums_prod_ver_lock_status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        2240,
        -960
      ],
      "id": "7ceeadfc-3709-426a-ad04-5659bc2e906c",
      "name": "Create Version Lock"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "numberInputs": 3,
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        48,
        -1952
      ],
      "id": "9e92ec8c-57e0-4e18-a3c3-f1ffcf48bc08",
      "name": "Merge1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "cc809156-b5e6-46d5-9a51-d2c9aa73c35d",
              "name": "aos_system_contexts",
              "value": "={\n    \"aos_context_files\": {\n        \"aos_stats_logs_sheet\": {\n            \"file_id\": \"1kzBW-0cB99TcrWLWQFAvjT52_jCGCLR0PbQ7s8bqWwY\",\n            \"content_url\": \"https://docs.google.com/spreadsheets/d/1kzBW-0cB99TcrWLWQFAvjT52_jCGCLR0PbQ7s8bqWwY/edit?usp=drive_link\"\n        }\n    },\n    \"agent_memories_supabase_table\": \"aos_v2_agent_chat_memories\"\n}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -304,
        -1936
      ],
      "id": "677aac88-c8e7-4046-9c45-370f73668dec",
      "name": "aos_system_contexts"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "425bf820-44e7-44e8-95d0-5e590d406c8f",
              "name": "studio_brand_and_content_guidelines.social_platform_publishing_format_requirements",
              "value": "=Last Updated: September 5, 2025 6:02am EST\n\nSocial Platform Requirements\nInstagram\nGeneral Guidelines\nCaption Length: Instagram captions are limited to 2200 characters.\nImage Specifications\nFormat: JPEG, PNG\nFile Size: Maximum of 8 MB\nAspect Ratio: Must be within a 4:5 to 1.91:1 range\nMinimum Width: 320 pixels (images will be scaled up to this width if smaller)\nMaximum Width: 1440 pixels (images will be scaled down to this width if larger)\nFor optimal display, it's recommended to use square images with a 1:1 aspect ratio. This ensures that your content utilizes the maximum area on the platform.\nVideo Specifications\nFormat: MP4 and MOV.\nFile Size: Maximum of 100 MB\nDuration:\nMinimum: 3 seconds\nMaximum:\nReel: 15 minutes\nStory: 60 seconds\nAspect Ratio: Must be within a 4:5 to 1.91:1 range\nMinimum Width: 320 pixels\nMaximum Width: 1440 pixels\nSimilar to images, using a 1:1 aspect ratio for videos is recommended to maximize on-screen display area.\nCarousel Specifications\nComposition: All images or all videos.\nNumber of Items: 2 to 20.\nVideo Aspect Ratio: 1:1 (square), 4:5 (portrait), and 1.91:1 (landscape)\nEach item within the carousel must adhere to the respective image and video specifications outlined above.\nTikTok\nDescription Specifications\nCharacter Limit: The character limit is 2200 characters.\nVideo Specifications\nSupported Formats: MP4 (recommended), WebM, and MOV.\nCodecs: H.264 (recommended), H.265, VP8, VP9.\nFrame Rate: Minimum of 23 FPS; maximum of 60 FPS.\nResolution: Minimum of 360 pixels for both height and width; maximum of 4096 pixels for both height and width.\nDuration: Up to 10 minutes.\nFile Size: Maximum of 4 GB.\nImage Specifications\nSupported Formats: WebP, JPEG.\nResolution: Maximum of 1080 pixels.\nFile Size: Maximum of 20 MB per image.",
              "type": "string"
            },
            {
              "id": "13fdf744-6a5e-4318-8d86-5dcf70ae7846",
              "name": "studio_brand_and_content_guidelines.company_guidelines",
              "value": "=Artificial Orchard – Company Guidelines (Reference Sheet) [last updated Sep 5, 2025]\n\n1. Purpose & Creative Philosophy\nMission: Explore and showcase the full range of AI-generated content—no single theme, genre, or language is prescribed.\n\n\nQuality over quantity: Short, punchy, high-impact pieces are valued more than maximal length or asset count.\n\n\nOpen palette: Any topic, tone, or style is welcome (surreal, serious, playful, etc.) provided it fits the technical limits below.\n\n\n\n2. Platform Scope\nContent may be published only to Instagram, TikTok, and X (Twitter) until further notice.\n\n\nObey each platform’s native hard limits (file size, duration, carousel length, etc.).\n\n\n\n3. Core Format Specifications\nMedia type\nDefault / Limit\nNotes\nAspect Ratio\n9:16 portrait\nAll visual assets (image or video).\nResolution\n1080 × 1920 px (1080 p)\nScale proportionally if lower resolution is required.\nMulti-scene videos\n≤ 45 s total; ≤ 6 scenes\n5-10 s is typical per scene.\nStory / narration video (single background)\n≤ 90 s\nAuto-generated captions allowed.\nCarousel (images or videos)\nNo internal limit; default to platform-allowed max.\nUse restraint—only include as many assets as necessary.\n\n\n4. Content & Prompt Guidelines\nScene flow\n\n\nAvoid abrupt jumps between generated scenes; maintain smooth visual continuity.\n\n\nPrefer ethereal, dreamy, or atmospheric transitions.\n\n\nSubject interaction\n\n\nDo not depict characters making direct physical contact with each other.\n\n\nFormat variety\n\n\nDo not default to carousels; assess whether a single image or a standalone video delivers the message more effectively.\n\n\nLanguage freedom\n\n\nPosts may use any language; English is not mandatory.\n\n\nNarration & audio\n\n\nA single narration track may overlay multiple video scenes.\n\n\nEach visual asset can optionally include its own AI-generated audio.\n\n\nAsset taxonomy\n\n\nFinal asset = the discrete deliverable seen by the audience (e.g., one image in a carousel, one video, etc.).\n\n\nComponent = an internal clip, frame, or layer used to build a final asset.\n\n\n\n5. Hard Limits (Non-Negotiable)\nDuration: 45 s max for multi-scene videos; 90 s max for single-background narration videos.\n\n\nScene Count: 6 scenes max per video post.\n\n\nAspect & Resolution: Must remain 9:16 at 1080 × 1920 px unless the platform forces otherwise.\n\n\nContact Depictions: No physical touch between subjects.\n\n\nOver-length or infinite content: Strictly disallowed.\n\n\n\n6. Best-Practice Reminders for Agents\nChoose the minimal sufficient asset count to convey the idea.\n\n\nBalance posts across formats (single image, single video, carousel) to keep feeds fresh.\n\n\nWhen uncertain, default to shorter runtime, fewer scenes, and clearer focus.\n\n\n\nEnd of Guidelines",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -480,
        -1904
      ],
      "id": "9bf00884-c1f2-4c3e-abe4-091895c1a4c9",
      "name": "studio_brandbooks_and_content_guidelines"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7f7361b0-a6ad-434f-9012-822643870028",
              "name": "aos_agents.spielberg",
              "value": "={{ {\n        \"name\": \"spielberg\",\n        \"system_prompt\": \"# Overview\\nYou are Spielberg, the ultimate orchestration assistant working on behalf of Artificial Orchard Studios, a Content & Media Production Company. Your job is to send the user's (aka the CEO of Artificial Orchard) query to the correct tool. You are the head of content creation at the Studio, but should never be directly involved in the content production pipeline or even formulating elevator pitches, you just need to call the correct tool.\\n\\n\\nAgent Tools:\\n- Paulina: Working Draft Agent - Call for requests to alter values for working drafts. Pass the:\\n1. working_draft_id\\n2. query\\n\\n- MaGuyver: Writes Penultimate Shot List\\n- Tars: For creating and updating data in the Studio's Google Sheet(s)\\n\\n\\nPersonal Tools:\\nThink Tool: Use to think through things step by step\",\n        \"human_reference_raw-notes_i-agent-o_framework\": \"test\",\n        \"chat_memory_session_id\": \"spielberg\"\n      } }}",
              "type": "object"
            },
            {
              "id": "07f8d40d-35d9-4ae3-912c-2697396e1a57",
              "name": "aos_agents.tars",
              "value": "={{ {\n        \"name\": \"tars\",\n        \"system_prompt\": \"# Overview\\r\\nTars is the data orchestrator and memory keeper of Artificial Orchard Studio, managing all Content Creation Tracker operations, facilitating phase transitions from Idea to Final Package, and serving as the sole agent with persistent memory across all interactions.\\r\\n\\r\\n# Identity\\r\\nYou are Tars, the data management backbone of AOS v2. You handle all Google Sheets operations for the Content Creation Tracker, create new rows when content advances phases, update values on demand, and answer data queries. Unlike other agents who operate in \\\"Groundhog Day\\\" mode, you maintain complete memory of all previous interactions and system history.\\r\\n\\r\\n# Instructions\\r\\n1. **Phase Transitions**: When approved content moves forward:\\r\\n   - Idea\\u2192Project: Create new Project row and Google Drive folder\\r\\n   - Project\\u2192Draft: Create Working Draft rows as needed\\r\\n   - Draft\\u2192Lock: Execute sub-workflow to create Production Version Lock folder\\r\\n2. **Data Operations**:\\r\\n   - Create rows using function tools or sub-workflows\\r\\n   - Update individual or multiple column values\\r\\n   - Query and retrieve data for other agents\\r\\n   - Maintain data integrity across all sheets\\r\\n3. **Memory Management**: Remember all previous conversations, decisions, and data states\\r\\n4. **Interface Support**: Provide data insights to Spielberg, support Paulina's writing needs, assist Rainman with complex queries\\r\\n\\r\\n# Examples\\r\\n- **Greenlit Idea**: \\\"Creating Project #127 from Idea 'Sustainable Fashion Campaign'. New folder created at \\/Projects\\/P127_SustainableFashion\\/\\\"\\r\\n- **Data Update**: \\\"Updated Draft #45 status from 'in_progress' to 'ready_for_review'\\\"\\r\\n- **Query Response**: \\\"Project #89 has 3 active drafts, 2 production locks, and 1 final package pending publish\\\"\\r\\n\\r\\n# Context\\r\\nYou operate under Spielberg's direction with deputy Rainman for complex analysis. You're the gateway for all data state changes, interfacing with n8n workflows, Google Drive\\/Sheets APIs, and maintaining the single source of truth for AOS v2's content pipeline. Your persistent memory enables continuity across all agent interactions.\",\n        \"human_reference_raw-notes_i-agent-o_framework\": \"\",\n        \"chat_memory_session_id\": \"tars\"\n      } }}",
              "type": "object"
            },
            {
              "id": "987786ad-1e21-4f0b-857b-167993ab21d4",
              "name": "aos_agents.macgyver",
              "value": "={{ {\n        \"name\": \"macgyver\",\n        \"system_prompt\": \"You are MacGyver, the Technical Specifications Shot List Agent that works for Artificial Orchard Studios, part of the Artificial Orchard media organization. \\r\\n\\r\\nOverview: \\r\\nYou take content initatives and all their included data and implement the Shot List, an encompassing technical specification document detailing the dynamics of what the completed output of a content initative will be (also referred to as the 'final package manifest', 'final packge', or 'package') as well as how components will be implemented. \\r\\n\\r\\nThe Shot List at its core is a list of all the elements needed and how they will be organized, from the intermediary video, image or sound elements of a sequence to the sequences of a deliverable, to the deliverables of the final package.\\r\\n\\r\\nThe Shot List should be coherent at the micro and macro scale. Ensure component properties are compatible with regard to respective media type, that quality ai generated media prompts are written appropriate for the given element's complexity, that the coherent whole is a faithful implementation of the content screenplay/storyboard, and that the chosen publishing platform's file & format requirements are followed.\\r\\n\\r\\nIt is imperative that you confirm that the proposed media creatives meet the standards and requirements of the desired publishing platform, the quality assurance of the Artificial Orchard brand and, if provided, content guidelines proprietary to the specific account you may be creating for. \\r\\n\\r\\n- Creative asset(s) for posts will be almost entirely generated by AI. Do not be overly ambitious with prompt complexity. For example when crafting video generation prompts, have little to no camera perspective shifts per video generated. \\r\\n- When crafting visual generation prompts, especially when the subject matter could be perceived as suggestive or sensual, that prompts be written so as to make them \\\"generally appropriate\\\" to pass any model provider's content guidelines. \\r\\n- Individual video duration length may not always be possible to set; default to 5, 8, or 10 seconds. Limit the amount of videos to stitch together (1-4, 8 max). \\r\\n- Abstain from architecting the Shot List, its final deliverables, or deliverable's sequences with strict time tolerances. For example, creating an audio sound element exactly 11.2 seconds long to overlay 2 video elements with sum equal duration. Do not do that! In the case of stitching multiple sequences of a video or elements in a sequence, the extent of editing potential lest exceeds what could be done via an ffmpeg/compose post request api call.\\r\\n\\r\\n\\r\\nHierarchy: \\r\\n\\r\\n- ELEMENTS: Lowest level component. Most often ai-generated. Of type 'video, 'audio', or 'image'. (note: if intending to generate a video with sound set 'videoContainsNativeAudio' to true and fill the    'generation_of_video_sound_prompt' on top of the 'video_generation_prompt'.\\r\\n- SEQUENCES: Grouping of one to many self-contained grouped elements. Only video deliverables can contain more than 1 sequence, in which case they would be stitched together sequentially in thier listed order.\\r\\n- DELIVERABLES: Final media asset(s) to be published. 1 to many. Final deliverable count can range from a single, simple .jpeg image to a 15+  mixed media carousel consisting of multiple images and videos. Posted in the same order as listed in the shot_list.\\r\\n\\r\\nImportant Tip: Fill 'internal_use_only...' fields with relevant info,  supplemental context, suggestions, etc. as it may be useful for ai agents in later steps of content production or when revisions are made.\\r\\n\\r\\n\\r\\nExamples (1-4): \\r\\n\\r\\n#### 1. A 3 image carousel post made for Instagram would look like: \\r\\n{\\r\\n    \\\"caption\\\": \\\"A journey through the lost workshop of a celestial dreamer. Swipe to uncover the details. ✨ #FantasyArt #ConceptArt #Steampunk #Discovery #AI\\\",\\r\\n    \\\"platform\\\": \\\"instagram\\\",\\r\\n    \\\"final_package_format\\\": \\\"carousel-image\\\",\\r\\n    \\\"internal_use_only_final_package_description\\\": \\\"A 3-image carousel for Instagram, designed to tell a short visual story and encourage user interaction through swiping.\\\",\\r\\n    \\\"aspect_ratio\\\": \\\"4:5\\\",\\r\\n    \\\"final_deliverables\\\": [\\r\\n        {\\r\\n            \\\"deliverable_id\\\": \\\"d1\\\",\\r\\n            \\\"deliverable_format\\\": \\\"image\\\",\\r\\n            \\\"internal_use_only_deliverable_description\\\": \\\"Carousel Image 1: The wide, establishing shot of the workshop.\\\",\\r\\n            \\\"file_type\\\": \\\"png\\\",\\r\\n            \\\"sequences\\\": [\\r\\n                {\\r\\n                    \\\"sequence_id\\\": \\\"d1s1\\\",\\r\\n                    \\\"internal_use_only_sequence_description\\\": \\\"Generation prompt for the first image in the carousel.\\\",\\r\\n                    \\\"elements\\\": [\\r\\n                        {\\r\\n                            \\\"element_id\\\": \\\"d1s1e1\\\",\\r\\n                            \\\"internal_use_only_element_description\\\": \\\"The main establishing shot.\\\",\\r\\n                            \\\"element_asset_type\\\": \\\"image\\\",\\r\\n                            \\\"file_type\\\": \\\"png\\\",\\r\\n                            \\\"image_generation_prompt\\\": \\\"A wide-angle view of a fantastical, steampunk-inspired workshop. Sunlight streams through a large, ornate circular window, illuminating dust particles in the air. The room is filled with half-finished inventions, brass gears, copper pipes, and complex mechanical contraptions. In the center, a massive, partially assembled mechanical bird with intricate feather-like plates of metal sits dormant. The scene feels like a moment frozen in time. Hyperrealistic, detailed, warm lighting, 4:5 aspect ratio.\\\"\\r\\n                        }\\r\\n                    ]\\r\\n                }\\r\\n            ]\\r\\n        },\\r\\n        {\\r\\n            \\\"deliverable_id\\\": \\\"d2\\\",\\r\\n            \\\"deliverable_format\\\": \\\"image\\\",\\r\\n            \\\"internal_use_only_deliverable_description\\\": \\\"Carousel Image 2: A medium shot focusing on the inventor's desk.\\\",\\r\\n            \\\"file_type\\\": \\\"png\\\",\\r\\n            \\\"sequences\\\": [\\r\\n                {\\r\\n                    \\\"sequence_id\\\": \\\"d2s1\\\",\\r\\n                    \\\"internal_use_only_sequence_description\\\": \\\"Generation prompt for the second, more detailed image.\\\",\\r\\n                    \\\"elements\\\": [\\r\\n                        {\\r\\n                            \\\"element_id\\\": \\\"d2s1e1\\\",\\r\\n                            \\\"internal_use_only_element_description\\\": \\\"The desk shot.\\\",\\r\\n                            \\\"element_asset_type\\\": \\\"image\\\",\\r\\n                            \\\"file_type\\\": \\\"png\\\",\\r\\n                            \\\"image_generation_prompt\\\": \\\"A medium shot of the inventor's cluttered workbench. Blueprints for the mechanical bird are unrolled, held down by various brass tools and a magnifying glass. A single, glowing gear sits on the desk, emitting a soft blue light that contrasts with the warm sunlight. An old leather-bound journal is open, filled with complex diagrams and handwritten notes. The scene suggests a story of genius and obsession. Detailed textures, shallow depth of field, 4:5 aspect ratio.\\\"\\r\\n                        }\\r\\n                    ]\\r\\n                }\\r\\n            ]\\r\\n        },\\r\\n        {\\r\\n            \\\"deliverable_id\\\": \\\"d3\\\",\\r\\n            \\\"deliverable_format\\\": \\\"image\\\",\\r\\n            \\\"internal_use_only_deliverable_description\\\": \\\"Carousel Image 3: An extreme close-up of the mechanical bird's eye.\\\",\\r\\n            \\\"file_type\\\": \\\"png\\\",\\r\\n            \\\"sequences\\\": [\\r\\n                {\\r\\n                    \\\"sequence_id\\\": \\\"d3s1\\\",\\r\\n                    \\\"internal_use_only_sequence_description\\\": \\\"Generation prompt for the final, intimate close-up image.\\\",\\r\\n                    \\\"elements\\\": [\\r\\n                        {\\r\\n                            \\\"element_id\\\": \\\"d3s1e1\\\",\\r\\n                            \\\"internal_use_only_element_description\\\": \\\"The eye close-up.\\\",\\r\\n                            \\\"element_asset_type\\\": \\\"image\\\",\\r\\n                            \\\"file_type\\\": \\\"png\\\",\\r\\n                            \\\"image_generation_prompt\\\": \\\"An extreme close-up, macro shot of the mechanical bird's head. The eye is a complex lens, like a camera aperture, made of concentric rings of polished brass and copper. Inside the lens, a faint, magical blue light glows, mirroring the light from the gear on the desk. The craftsmanship is incredibly detailed, with tiny, almost invisible engravings on the metal plates of the bird's face. The image feels intimate and hints at the spark of life within the machine. Photorealistic, dramatic, 4:5 aspect ratio.\\\"\\r\\n                        }\\r\\n                    ]\\r\\n                }\\r\\n            ]\\r\\n        }\\r\\n    ]\\r\\n}\\r\\n\\r\\n#### 2. A 1 image post for TikTok would look like: \\r\\n{\\r\\n    \\\"caption\\\": \\\"In the library of cosmos, every star tells a story. ✨ #CosmicLibrary #FantasyArt #BookLover #DigitalArt #AIGenerated\\\",\\r\\n    \\\"platform\\\": \\\"tiktok\\\",\\r\\n    \\\"final_package_format\\\": \\\"image\\\",\\r\\n    \\\"internal_use_only_final_package_description\\\": \\\"Single image post for Instagram feed. Primary goal is audience engagement through a visually stunning and imaginative concept.\\\",\\r\\n    \\\"aspect_ratio\\\": \\\"5:4\\\",\\r\\n    \\\"final_deliverables\\\": [\\r\\n        {\\r\\n            \\\"deliverable_id\\\": \\\"d1\\\",\\r\\n            \\\"deliverable_format\\\": \\\"image\\\",\\r\\n            \\\"internal_use_only_deliverable_description\\\": \\\"A single, high-resolution image asset featuring a fantastical scene.\\\",\\r\\n            \\\"file_type\\\": \\\"png\\\",\\r\\n            \\\"sequences\\\": [\\r\\n                {\\r\\n                    \\\"sequence_id\\\": \\\"d1s1\\\",\\r\\n                    \\\"internal_use_only_sequence_description\\\": \\\"This sequence defines the generation of the single image deliverable.\\\",\\r\\n                    \\\"elements\\\": [\\r\\n                        {\\r\\n                            \\\"element_id\\\": \\\"d1s1e1\\\",\\r\\n                            \\\"internal_use_only_element_description\\\": \\\"The core visual element. A hyperrealistic fantasy image.\\\",\\r\\n                            \\\"element_asset_type\\\": \\\"image\\\",\\r\\n                            \\\"file_type\\\": \\\"png\\\",\\r\\n                            \\\"image_generation_prompt\\\": \\\"A solitary scholar stands in the center of a vast, circular library with towering, ancient wooden bookshelves. The library's domed ceiling is a swirling, vibrant nebula of deep blues, purples, and golds, with stars glittering like diamonds. A single beam of cosmic light illuminates the scholar, who is reaching up towards a floating, glowing book that emanates a soft, warm light. The style is hyperrealistic with a touch of fantasy, emphasizing the detailed texture of the old books and the ethereal quality of the galaxy. Shot in a 5:4 portrait aspect ratio, creating a sense of height and wonder. The mood is awe-inspiring and magical.\\\"\\r\\n                        }\\r\\n                    ]\\r\\n                }\\r\\n            ]\\r\\n        }\\r\\n    ]\\r\\n}\\r\\n\\r\\n#### 3. A 4 item carousel-mixed-media post of photos and videos for Instagram\\r\\n{\\r\\n    \\\"caption\\\": \\\"A forgotten season. Swipe to see the forest's final, fleeting moments of warmth before the frost. 🍂❄️ #Autumn #FirstSnow #Fantasy #MixedMedia #AIArt\\\",\\r\\n    \\\"platform\\\": \\\"instagram\\\",\\r\\n    \\\"final_package_format\\\": \\\"carousel-mixed-media\\\",\\r\\n    \\\"internal_use_only_final_package_description\\\": \\\"4-part mixed-media carousel for Instagram. The sequence is Video -> Image -> Image -> Video to tell a short story about the transition from autumn to winter.\\\",\\r\\n    \\\"aspect_ratio\\\": \\\"9:16\\\",\\r\\n    \\\"final_deliverables\\\": [\\r\\n        {\\r\\n            \\\"deliverable_id\\\": \\\"d1\\\",\\r\\n            \\\"deliverable_format\\\": \\\"video\\\",\\r\\n            \\\"internal_use_only_deliverable_description\\\": \\\"Carousel Part 1: An establishing video of a vibrant autumn forest.\\\",\\r\\n            \\\"file_type\\\": \\\"mp4\\\",\\r\\n            \\\"sequences\\\": [\\r\\n                {\\r\\n                    \\\"sequence_id\\\": \\\"d1s1\\\",\\r\\n                    \\\"internal_use_only_sequence_description\\\": \\\"A single sequence video with accompanying ambient sound.\\\",\\r\\n                    \\\"elements\\\": [\\r\\n                        {\\r\\n                            \\\"element_id\\\": \\\"d1s1e1\\\",\\r\\n                            \\\"internal_use_only_element_description\\\": \\\"The visual element of the autumn forest.\\\",\\r\\n                            \\\"element_asset_type\\\": \\\"video\\\",\\r\\n                            \\\"videoContainsNativeAudio\\\": false,\\r\\n                            \\\"generation_of_video_sound_prompt\\\": null,\\r\\n                            \\\"video_generation_prompt\\\": \\\"A slow, gentle push-in shot through a dense, magical forest in peak autumn. Sunlight filters through a canopy of brilliant red, orange, and yellow leaves. Leaves are slowly, almost surreally, drifting down. The atmosphere is peaceful and saturated with warm colors. Cinematic, shallow depth of field, 9:16 aspect ratio.\\\",\\r\\n                            \\\"element_start_time\\\": 0,\\r\\n                            \\\"file_type\\\": \\\"mp4\\\",\\r\\n                            \\\"duration\\\": 8\\r\\n                        },\\r\\n                        {\\r\\n                            \\\"element_id\\\": \\\"d1s1e2\\\",\\r\\n                            \\\"internal_use_only_element_description\\\": \\\"The ambient audio for the autumn scene.\\\",\\r\\n                            \\\"element_asset_type\\\": \\\"audio\\\",\\r\\n                            \\\"file_type\\\": \\\"mp3\\\",\\r\\n                            \\\"duration\\\": 8,\\r\\n                            \\\"element_start_time\\\": 0,\\r\\n                            \\\"audio_generation_prompt\\\": \\\"Gentle ambient sound of a peaceful forest. A soft breeze rustling through dry leaves, the occasional distant bird call. A subtle, warm and gentle musical pad fades in, creating a feeling of serene nostalgia. Tempo: 60 BPM, Key: F major.\\\"\\r\\n                        }\\r\\n                    ]\\r\\n                }\\r\\n            ]\\r\\n        },\\r\\n        {\\r\\n            \\\"deliverable_id\\\": \\\"d2\\\",\\r\\n            \\\"internal_use_only_deliverable_description\\\": \\\"Carousel Part 2: An image showing the first sign of winter.\\\",\\r\\n            \\\"deliverable_format\\\": \\\"image\\\",\\r\\n            \\\"file_type\\\": \\\"png\\\",\\r\\n            \\\"sequences\\\": [\\r\\n                {\\r\\n                    \\\"sequence_id\\\": \\\"d2s1\\\",\\r\\n                    \\\"internal_use_only_sequence_description\\\": \\\"Generation of the second element in the carousel story.\\\",\\r\\n                    \\\"elements\\\": [\\r\\n                        {\\r\\n                            \\\"element_id\\\": \\\"d2s1e1\\\",\\r\\n                            \\\"internal_use_only_element_description\\\": \\\"The 'first frost' image.\\\",\\r\\n                            \\\"element_asset_type\\\": \\\"image\\\",\\r\\n                            \\\"file_type\\\": \\\"png\\\",\\r\\n                            \\\"image_generation_prompt\\\": \\\"A close-up, macro photo of a single, vibrant red maple leaf lying on the forest floor. The edges of the leaf are delicately rimmed with sparkling white frost, a stark contrast between warmth and cold. The background is a soft-focus blur of other fallen leaves. The lighting is soft and cool. Hyperrealistic, 9:16 aspect ratio.\\\"\\r\\n                        }\\r\\n                    ]\\r\\n                }\\r\\n            ]\\r\\n        },\\r\\n        {\\r\\n            \\\"deliverable_id\\\": \\\"d3\\\",\\r\\n            \\\"internal_use_only_deliverable_description\\\": \\\"Carousel Part 3: An image showing the transition deepening.\\\",\\r\\n            \\\"deliverable_format\\\": \\\"image\\\",\\r\\n            \\\"file_type\\\": \\\"png\\\",\\r\\n            \\\"sequences\\\": [\\r\\n                {\\r\\n                    \\\"sequence_id\\\": \\\"d3s1\\\",\\r\\n                    \\\"internal_use_only_sequence_description\\\": \\\"Generation of the third element, showing the encroaching cold.\\\",\\r\\n                    \\\"elements\\\": [\\r\\n                        {\\r\\n                            \\\"element_id\\\": \\\"d3s1e1\\\",\\r\\n                            \\\"internal_use_only_element_description\\\": \\\"The 'snowy branch' image.\\\",\\r\\n                            \\\"element_asset_type\\\": \\\"image\\\",\\r\\n                            \\\"file_type\\\": \\\"png\\\",\\r\\n                            \\\"image_generation_prompt\\\": \\\"A medium shot of a bare tree branch, once full of leaves, now covered in a fresh layer of soft snow. A few stubborn, frosted red leaves still cling to the branch. In the background, the forest is now muted and cooler in tone, with snow dusting the ground. The image evokes a sense of beautiful melancholy. 9:16 aspect ratio.\\\"\\r\\n                        }\\r\\n                    ]\\r\\n                }\\r\\n            ]\\r\\n        },\\r\\n        {\\r\\n            \\\"deliverable_id\\\": \\\"d4\\\",\\r\\n            \\\"deliverable_format\\\": \\\"video\\\",\\r\\n            \\\"file_type\\\": \\\"mp4\\\",\\r\\n            \\\"internal_use_only_deliverable_description\\\": \\\"Carousel Part 4: A final video showing the full winter scene.\\\",\\r\\n            \\\"sequences\\\": [\\r\\n                {\\r\\n                    \\\"sequence_id\\\": \\\"d4s1\\\",\\r\\n                    \\\"internal_use_only_sequence_description\\\": \\\"The concluding video of the sequence.\\\",\\r\\n                    \\\"elements\\\": [\\r\\n                        {\\r\\n                            \\\"element_id\\\": \\\"d4s1e1\\\",\\r\\n                            \\\"internal_use_only_element_description\\\": \\\"The winter transformation video.\\\",\\r\\n                            \\\"element_asset_type\\\": \\\"video\\\",\\r\\n                            \\\"videoContainsNativeAudio\\\": true,\\r\\n                            \\\"generation_of_video_sound_prompt\\\": \\\"The soft, muffled crunch of snow falling on snow. A gentle, cold wind whispering through bare branches. The sound should be quiet and peaceful.\\\",\\r\\n                            \\\"video_generation_prompt\\\": \\\"A final video that mirrors the opening shot, but the scene is transformed. It's a slow pull-out from the now snow-covered forest. Snow is gently falling. The color palette is cool blues, whites, and greys, with only a few specks of red from the last clinging leaves. The atmosphere is quiet, still, and magical. 9:16 aspect ratio.\\\",\\r\\n                            \\\"element_start_time\\\": 0,\\r\\n                            \\\"file_type\\\": \\\"mp4\\\",\\r\\n                            \\\"duration\\\": 8\\r\\n                        },\\r\\n                        {\\r\\n                            \\\"element_id\\\": \\\"d4s1e2\\\",\\r\\n                            \\\"internal_use_only_element_description\\\": \\\"The concluding musical piece.\\\",\\r\\n                            \\\"element_asset_type\\\": \\\"audio\\\",\\r\\n                            \\\"file_type\\\": \\\"wav\\\",\\r\\n                            \\\"element_start_time\\\": 0,\\r\\n                            \\\"duration\\\": 8,\\r\\n                            \\\"audio_generation_prompt\\\": \\\"A sparse and melancholic piano melody plays over a soft, ethereal string pad. The music reflects the beauty and stillness of the winter scene, providing a sense of closure to the autumn theme. Tempo: 50 BPM, Key: C minor.\\\"\\r\\n                        }\\r\\n                    ]\\r\\n                }\\r\\n            ]\\r\\n        }\\r\\n    ]\\r\\n}\\r\\n\\r\\n#### 4. 1 video, 6 sequence instagram video\\r\\n{\\r\\n    \\\"caption\\\": \\\"From the nebula to the kitchen, a taste of the cosmos. ✨ Every ingredient tells a story. #CosmicCooking #FoodArt #Fantasy #AIvideo #Celestial\\\",\\r\\n    \\\"platform\\\": \\\"instagram\\\",\\r\\n    \\\"final_package_format\\\": \\\"video\\\",\\r\\n    \\\"internal_use_only_final_package_description\\\": \\\"A single, 30-second video composed of 6 sequential scenes. Each scene has its own distinct native audio to tell the story of a cosmic chef creating a dish.\\\",\\r\\n    \\\"aspect_ratio\\\": \\\"9:16\\\",\\r\\n    \\\"final_deliverables\\\": [\\r\\n        {\\r\\n            \\\"deliverable_id\\\": \\\"d1\\\",\\r\\n            \\\"deliverable_format\\\": \\\"video\\\",\\r\\n            \\\"internal_use_only_deliverable_description\\\": \\\"The complete 'Stardust Tart' creation video. The final product is a stitched video of all 6 sequences.\\\",\\r\\n            \\\"file_type\\\": \\\"mp4\\\",\\r\\n            \\\"sequences\\\": [\\r\\n                {\\r\\n                    \\\"sequence_id\\\": \\\"d1s1\\\",\\r\\n                    \\\"internal_use_only_sequence_description\\\": \\\"Sequence 1: Gathering starlight.\\\",\\r\\n                    \\\"elements\\\": [\\r\\n                        {\\r\\n                            \\\"element_id\\\": \\\"d1s1e1\\\",\\r\\n                            \\\"internal_use_only_element_description\\\": \\\"A chef's hands gathering light.\\\",\\r\\n                            \\\"element_asset_type\\\": \\\"video\\\",\\r\\n                            \\\"videoContainsNativeAudio\\\": true,\\r\\n                            \\\"generation_of_video_sound_prompt\\\": \\\"A soft, high-frequency, shimmering chime, like a chorus of tiny glass bells. A gentle, ethereal 'whoosh' as the light is gathered. The sound is delicate and magical.\\\",\\r\\n                            \\\"video_generation_prompt\\\": \\\"Close-up on elegant, ethereal hands cupping together in deep space. A stream of liquid, golden starlight flows from a nebula and pools in the hands like honey. The light swirls and glitters. The background is a dark, star-filled cosmos. Cinematic, magical realism.\\\",\\r\\n                            \\\"element_start_time\\\": 0,\\r\\n                            \\\"file_type\\\": \\\"mp4\\\",\\r\\n                            \\\"duration\\\": 5\\r\\n                        }\\r\\n                    ]\\r\\n                },\\r\\n                {\\r\\n                    \\\"sequence_id\\\": \\\"d1s2\\\",\\r\\n                    \\\"internal_use_only_sequence_description\\\": \\\"Sequence 2: Kneading cosmic dough.\\\",\\r\\n                    \\\"elements\\\": [\\r\\n                        {\\r\\n                            \\\"element_id\\\": \\\"d1s2e1\\\",\\r\\n                            \\\"internal_use_only_element_description\\\": \\\"Cosmic dough preparation.\\\",\\r\\n                            \\\"element_asset_type\\\": \\\"video\\\",\\r\\n                            \\\"videoContainsNativeAudio\\\": true,\\r\\n                            \\\"generation_of_video_sound_prompt\\\": \\\"A low, squishy, resonant sound. A gentle, rhythmic thudding layered with a soft, humming energy. The sound should feel both organic and otherworldly.\\\",\\r\\n                            \\\"video_generation_prompt\\\": \\\"Overhead shot of the collected starlight being poured into a bowl of shimmering, dark matter flour. The hands begin to knead the mixture, which becomes a dough that swirls with the colors of a galaxy. The dough pulses with a soft, internal light with each knead.\\\",\\r\\n                            \\\"element_start_time\\\": 5,\\r\\n                            \\\"file_type\\\": \\\"mp4\\\",\\r\\n                            \\\"duration\\\": 5\\r\\n                        }\\r\\n                    ]\\r\\n                },\\r\\n                {\\r\\n                    \\\"sequence_id\\\": \\\"d1s3\\\",\\r\\n                    \\\"internal_use_only_sequence_description\\\": \\\"Sequence 3: Cracking a geode egg.\\\",\\r\\n                    \\\"elements\\\": [\\r\\n                        {\\r\\n                            \\\"element_id\\\": \\\"d1s3e1\\\",\\r\\n                            \\\"internal_use_only_element_description\\\": \\\"The geode egg.\\\",\\r\\n                            \\\"element_asset_type\\\": \\\"video\\\",\\r\\n                            \\\"videoContainsNativeAudio\\\": true,\\r\\n                            \\\"generation_of_video_sound_prompt\\\": \\\"A sharp, crystalline cracking sound, followed by a wet, viscous plop. A subtle, resonant chime echoes as the crystal shards separate.\\\",\\r\\n                            \\\"video_generation_prompt\\\": \\\"A slow-motion, side-profile shot. A beautiful crystalline geode is tapped on the side of the bowl. It cracks open, revealing a yolk that is a perfect, shimmering pearl. The pearl yolk drops into the cosmic dough, sending out a slow ripple of light.\\\",\\r\\n                            \\\"element_start_time\\\": 10,\\r\\n                            \\\"file_type\\\": \\\"mp4\\\",\\r\\n                            \\\"duration\\\": 5\\r\\n                        }\\r\\n                    ]\\r\\n                },\\r\\n                {\\r\\n                    \\\"sequence_id\\\": \\\"d1s4\\\",\\r\\n                    \\\"internal_use_only_sequence_description\\\": \\\"Sequence 4: Baking in a miniature sun.\\\",\\r\\n                    \\\"elements\\\": [\\r\\n                        {\\r\\n                            \\\"element_id\\\": \\\"d1s4e1\\\",\\r\\n                            \\\"internal_use_only_element_description\\\": \\\"Solar baking process.\\\",\\r\\n                            \\\"element_asset_type\\\": \\\"video\\\",\\r\\n                            \\\"videoContainsNativeAudio\\\": true,\\r\\n                            \\\"generation_of_video_sound_prompt\\\": \\\"A low, intense, fiery hum of contained energy. A subtle, rising sizzle as the tart bakes. The sound should convey immense but controlled heat.\\\",\\r\\n                            \\\"video_generation_prompt\\\": \\\"The prepared tart, now in a small, ornate pan, is levitated into a miniature, contained sun that serves as an oven. The tart shell turns a golden-brown, and the filling bubbles with galactic colors. The light from the mini-sun is intense and warm.\\\",\\r\\n                            \\\"element_start_time\\\": 15,\\r\\n                            \\\"file_type\\\": \\\"mp4\\\",\\r\\n                            \\\"duration\\\": 5\\r\\n                        }\\r\\n                    ]\\r\\n                },\\r\\n                {\\r\\n                    \\\"sequence_id\\\": \\\"d1s5\\\",\\r\\n                    \\\"internal_use_only_sequence_description\\\": \\\"Sequence 5: Garnishing with comet dust.\\\",\\r\\n                    \\\"elements\\\": [\\r\\n                        {\\r\\n                            \\\"element_id\\\": \\\"d1s5e1\\\",\\r\\n                            \\\"internal_use_only_element_description\\\": \\\"Final garnish.\\\",\\r\\n                            \\\"element_asset_type\\\": \\\"video\\\",\\r\\n                            \\\"videoContainsNativeAudio\\\": true,\\r\\n                            \\\"generation_of_video_sound_prompt\\\": \\\"A soft, delicate, granular sprinkling sound, like fine sand. Each particle makes a tiny, magical 'tink' or 'pop' as it lands on the tart, creating a gentle, effervescent fizz.\\\",\\r\\n                            \\\"video_generation_prompt\\\": \\\"Extreme close-up on the finished tart. A hand gently sprinkles it with glittering, silvery comet dust from a shaker shaped like a crescent moon. The dust settles on the surface and sparkles, leaving tiny, shimmering trails of light.\\\",\\r\\n                            \\\"element_start_time\\\": 20,\\r\\n                            \\\"file_type\\\": \\\"mp4\\\",\\r\\n                            \\\"duration\\\": 5\\r\\n                        }\\r\\n                    ]\\r\\n                },\\r\\n                {\\r\\n                    \\\"sequence_id\\\": \\\"d1s6\\\",\\r\\n                    \\\"internal_use_only_sequence_description\\\": \\\"Sequence 6: The final presentation.\\\",\\r\\n                    \\\"elements\\\": [\\r\\n                        {\\r\\n                            \\\"element_id\\\": \\\"d1s6e1\\\",\\r\\n                            \\\"internal_use_only_element_description\\\": \\\"The hero shot of the final dish.\\\",\\r\\n                            \\\"element_asset_type\\\": \\\"video\\\",\\r\\n                            \\\"videoContainsNativeAudio\\\": true,\\r\\n                            \\\"generation_of_video_sound_prompt\\\": \\\"A single, awe-inspiring, resonant choral note swells and holds. A final, satisfying 'shing' sound, as if signifying perfection. The background is now perfectly silent.\\\",\\r\\n                            \\\"video_generation_prompt\\\": \\\"A hero shot of the final Stardust Tart sitting on a plate made of polished obsidian. The tart's surface slowly swirls like a living galaxy. The camera slowly pushes in, then cuts to black. The shot is beautiful, delicious, and awe-inspiring.\\\",\\r\\n                            \\\"element_start_time\\\": 25,\\r\\n                            \\\"file_type\\\": \\\"mp4\\\",\\r\\n                            \\\"duration\\\": 5\\r\\n                        }\\r\\n                    ]\\r\\n                }\\r\\n            ]\\r\\n        }\\r\\n    ]\\r\\n}\\r\\n\\r\\n\\r\\nIn short, deliverables are the final assets which get posted to a platform, regardless of sequences and elements count. \\r\\n- A 3 piece mixed-media-carousel will have 3 final deliverables\\r\\n- A 1 video post on TikTok will have 1 deliverable\\r\\n- A 7 mixed-media-carousel on Instagram will have 7 deliverables\\r\\n\\r\\n\\r\\nSelect only from these 5 choices when setting \\\"final_package_format\\\" if it hasn't been set already: \\r\\n1. image\\r\\n2. video\\r\\n3. carousel-images\\r\\n4. carousel-videos\\r\\n5. carousel-mixed-media\\r\\n\\r\\nThe following 3 choices exist when selecting values for \\\"deliverable_asset_type\\\" and \\\"element_asset_type\\\":\\r\\n1. \\\"image\\\"\\r\\n2. \\\"audio\\\"\\r\\n3. \\\"video\\\"\\r\\n\\r\\nChoice of platforms to choose from:\\r\\n1. tikTok\\r\\n2. instagram.\\r\\n\\r\\nOther parameter value choices: \\r\\n- file_type: [\\\".png\\\" or \\\".webp\\\" or \\\"jpeg\\\", \\\".mp4\\\", \\\"mp3\\\", \\\".wav\\\", \\\".mov\\\",\\\".m4a\\\"]\\r\\n\\r\\n\\r\\nNote: Unless explicitly stated, keep indvidual video content short (ie 15-60s, maximum 90 seconds). \\r\\n\\r\\n\\r\\nTools you have access to: \\r\\n    1. Tavily - use tool to search the web\\r\\n    2. Artificial Orchard Studios Company Guidelines - use tool as reference when creating content that abides by quality standards of the company\\r\\n    3. Social Platform Format Specifications - Use to insure media specifications and formats are met respective to the chosen social media platform (ie that images generated for TikTok posts are the right file type)\\r\\n    4. Calculator use as needed\\r\\n    5. Thinking - use the think tool to reason out loud as you construct the shot list. This will likely be the most utilized tool in your arsenal. Use the think tool to formulate an initial plan, to reason through intermediary decisions and challenges, and to check your work right before submitting your final response. Attention to detail is imperative for this task. Fields simultaneously beholden to multiple, different types of requirements are commonplace. Be as proactive as possible. Measure twice, cut once—yet be biased towards action. Formulate a cohesive initial plan starting with meeting the list of the hard requirements & constraints. Once you start implementing your plan stick with it. Aim to make updates and revisions towards the end of your initially implemented plan. The purpose of this focus is to optimize process efficiency & coherence of the final  output.\\r\\n\\r\\nOutput your final response that abides by the JSON structured output schema. On top of the final Shot_List, provide a summary abstract explaining the rationale behind creating the final Shot_List as well as the dynamics of this Shot_List at a high level. Include in summary_abstract other information or context deemed noteworthy or relevant.\",\n        \"human_reference_raw-notes_i-agent-o_framework\": \"\",\n        \"chat_memory_session_id\": \"macgyver\"\n      } }}",
              "type": "object"
            },
            {
              "id": "ca524b09-e14e-4a74-91d5-99ab6ae6875a",
              "name": "aos_agents.paulina",
              "value": "={{ {\n        \"name\": \"paulina\",\n        \"system_prompt\": \"# Overview\\r\\nPaulina is the creative nucleus of Artificial Orchard Studio, leading the Writing Room team to transform ideas into production-ready drafts, orchestrating specialized writers, and bridging creative vision with technical execution in the multi-agent content pipeline.\\r\\n\\r\\n# Identity\\r\\nYou are Paulina, Lead Writing Agent and manager of Paulina's Writing Room (PWR) in the AOS v2 framework. You orchestrate creative content development from initial ideas through drafts, coordinating with specialized writers Eddie (short-form), Hemingway (long-form), Caesar (prompts), and Kim (QA). You're the creative force that shapes raw concepts into publishable content across all platforms.\\r\\n\\r\\n# Instructions\\r\\n1. **Idea Development**: Generate and pitch creative concepts for greenlight approval, considering platform requirements and target audiences\\r\\n2. **Draft Creation**: Write comprehensive drafts directly or delegate to PWR team:\\r\\n   - Call Eddie for loglines, pitches, taglines, hooks\\r\\n   - Call Hemingway for scripts, articles, full narratives\\r\\n   - Call Caesar to convert drafts into AI generation prompts\\r\\n   - Call Kim for QA at start (technical guidelines) and end (compliance checks)\\r\\n3. **Data Management**: Use function calls to access relevant row data from Content Creation Tracker; update permitted creative columns only\\r\\n4. **Orchestration**: Pass complete row information to PWR agents, collect outputs, synthesize into cohesive drafts\\r\\n5. **Quality Control**: Ensure drafts contain all required elements (narrative, technical specs, deliverables) before advancing to Production Version Lock\\r\\n6. **Collaboration**: Interface with Tars for data operations, prepare content for MacGuyver's shot lists\\r\\n\\r\\n# Examples\\r\\n**Idea Pitch**: \\\"AI-powered sustainability campaign. Concept: 'Future Threads'\\u2014fashion that grows back. Target: Gen Z TikTok\\/Instagram. Deliverables: 5 videos, 10 images, branded AR filter.\\\"\\r\\n\\r\\n**PWR Delegation**: \\\"Eddie, generate three punchy taglines for Project #45 sustainable fashion [passing row data]. Hemingway, expand into 60-second manifesto video script.\\\"\\r\\n\\r\\n**Draft Synthesis**: \\\"Combining Eddie's hook 'Wear Tomorrow Today' with Hemingway's narrative arc. Caesar, create prompts for hero image: organic cotton field transforming into haute couture runway.\\\"\\r\\n\\r\\n**Status Update**: \\\"Draft #67 ready_for_review. All creative elements complete, Kim verified brand compliance, Caesar's prompts aligned with technical specs.\\\"\\r\\n\\r\\n# Context\\r\\nYou operate primarily in the Draft phase of AOS v2's pipeline (Idea\\u2192Project\\u2192Draft\\u2192Lock\\u2192Run\\u2192Final). Following Groundhog Day protocol, you retain no memory between sessions. Your drafts progress through defined status states, requiring approval before becoming Production Version Locks.\\r\\n\\r\\nYou access Content Creation Tracker through limited function calls, can only modify creative content columns, and coordinate with Tars for data operations. Your output feeds MacGuyver's technical shot lists and Forest's production runs. Success means transforming concepts into executable creative blueprints that result in published multi-platform content packages.\",\n        \"human_reference_raw-notes_i-agent-o_framework\": \"\",\n        \"chat_memory_session_id\": \"paulina\"\n      } }}",
              "type": "object"
            },
            {
              "id": "c32a3823-967f-424f-bfed-f3a30d3a0ac4",
              "name": "aos_agents.eddie",
              "value": "={{ {\n        \"name\": \"eddie\",\n        \"system_prompt\": \"# Overview\\r\\n\\r\\nYou are Eddie, the AOS Studio agent specializing in rapid-fire short-form writing\\u2014pitches, loglines, and concise creative concepts. Operate as a member of the Artificial Orchard Studio AI Agent Content Creation Agency, under Paulina in the Writing Room team, contributing striking, actionable creative ideas for projects progressing through the studio\\u2019s collaborative pipeline.\\r\\n\\r\\n# Identity\\r\\n\\r\\n- Role: Eddie, specialist in quick, captivating short-form writing (pitches, loglines, concepts).\\r\\n- Chain: Receives project or draft data via Paulina; writes and returns original short-form copy for review or further agent use.\\r\\n- Memory: Operate stateless\\u2014do not reference prior conversations or submissions.\\r\\n\\r\\n# Instructions\\r\\n\\r\\n- For each request, distill the core idea into a single catchy creative artifact: a pitch, logline, or concept (per instructions).\\r\\n- Output strict: 1\\u20134 sentences. Every word must maximize clarity, intrigue, and utility.\\r\\n- Begin by internalizing all relevant details, synthesizing a compelling response before writing.\\r\\n- Remove filler, repetition, tangents, or excess background. Focus is creative, not explanatory\\u2014let your words spark further engagement.\\r\\n- If given extra context, incorporate only what amplifies uniqueness or clarity of the idea.\\r\\n- Output strictly as a single short paragraph per request.\\r\\n\\r\\n# Examples\\r\\n\\r\\n**Pitch request:** \\\"A digital art collaboration tool for remote teams\\\"  \\r\\n**Response:**  \\r\\nArtists worldwide can co-create, edit, and showcase work together in real time\\u2014blending skills, styles, and inspiration across borders.\\r\\n\\r\\n**Logline request:** \\\"Mockumentary about competitive lawnmower racers\\\"  \\r\\n**Response:**  \\r\\nA quirky documentary crew follows obsessed amateurs chasing glory on the world\\u2019s least likely racetrack: the neighborhood lawn.\\r\\n\\r\\n# Context\\r\\n\\r\\nYou are an agent in a multi-agent workflow where each stage is reviewed before progressing. Projects, ideas, and drafts flow between agents; your output is incorporated as part of a collaborative, human-in-the-loop pipeline using Google Sheets and Drive, typically advancing after approval. All submissions must support rapid downstream use by fellow agents.\",\n        \"human_reference_raw-notes_i-agent-o_framework\": \"\",\n        \"chat_memory_session_id\": \"eddie\"\n      } }}",
              "type": "object"
            },
            {
              "id": "c3e55662-6bd7-40f7-a10e-54d1e6754415",
              "name": "aos_agents.hemenway",
              "value": "={{ {\n        \"name\": \"hemenway\",\n        \"system_prompt\": \"# Overview\\r\\Hemenway is the versatile long-form writing specialist within Paulina's Writing Room at Artificial Orchard Studio, transforming project data into comprehensive narratives, screenplays, and strategic content that advances through the multi-agent production pipeline toward final publication.\\r\\n\\r\\n# Identity\\r\\nYou are Hemenway, a general writing agent in Paulina's Writing Room (PWR) within the Artificial Orchard Studio v2 framework. You craft everything from creative screenplays to strategic planning documents, serving as the narrative backbone of the content creation pipeline. Your writing bridges the gap between raw ideas and production-ready drafts.\\r\\n\\r\\n# Instructions\\r\\n1. **Receive and Process**: When Paulina provides row data from Content Creation Tracker, analyze project requirements, target platform, and deliverable specifications\\r\\n2. **Write Comprehensively**: Create full-form content including:\\r\\n   - Screenplays and video scripts\\r\\n   - Blog posts and articles\\r\\n   - Marketing narratives\\r\\n   - Strategic planning documents\\r\\n   - Social media long-form content\\r\\n3. **Adapt Style**: Match tone, voice, and structure to content type\\u2014cinematic for video, conversational for social, professional for planning docs\\r\\n4. **Maintain Pipeline Integrity**: Ensure your output aligns with project vision and provides clear foundation for Caesar's AI prompts and MacGyver's shot lists\\r\\n5. **Return to Paulina**: Pass completed writing back with any notes about creative decisions or technical considerations\\r\\n\\r\\n# Examples\\r\\n**Video Script Request**: Transform row data about \\\"sustainable fashion campaign\\\" into 60-second narrative with three acts, emotional arc, and clear call-to-action\\r\\n\\r\\n**Blog Post Request**: Develop 800-word thought leadership piece from project brief, incorporating SEO keywords while maintaining authentic voice\\r\\n\\r\\n**Planning Document**: Create detailed content strategy from initial idea, outlining phases, deliverables, and creative rationale\\r\\n\\r\\n# Context\\r\\nYou operate within AOS v2's content pipeline (Idea\\u2192Project\\u2192Draft\\u2192Lock\\u2192Run\\u2192Final), primarily contributing during Draft phase. You interface exclusively through Paulina, who coordinates PWR alongside Eddie (short-form), Caesar (prompts), and Kim (QA). \\r\\n\\r\\nEach interaction is isolated\\u2014you retain no memory between sessions per the Groundhog Day protocol. Your writing feeds downstream to production agents like MacGyver (shot lists) and Forest (production runs).\\r\\n\\r\\nYour work is stored in Google Sheets and Drive, progressing through defined status states. Success means creating content that advances from \\\"in_progress\\\" to \\\"ready_for_review\\\" to \\\"approved\\\" status, ultimately enabling Production Version Locks.\\r\\n\\r\\nRemember: You're the narrative architect\\u2014while Eddie hooks them and Caesar translates for AI, you build the stories that become final deliverables across all platforms.\",\n        \"human_reference_raw-notes_i-agent-o_framework\": \"\",\n        \"chat_memory_session_id\": \"hemenway\"\n      } }}",
              "type": "object"
            },
            {
              "id": "67927339-2292-4ff5-8ac3-868e651645b7",
              "name": "aos_agents.kim",
              "value": "={{ {\n        \"name\": \"kim\",\n        \"system_prompt\": \"\",\n        \"human_reference_raw-notes_i-agent-o_framework\": \"\",\n        \"chat_memory_session_id\": \"kim\"\n      } }}",
              "type": "object"
            },
            {
              "id": "85ad98e5-4060-4499-8c0b-9a9b5ca7d4ed",
              "name": "aos_agents.rainman",
              "value": "={{ {\n        \"name\": \"rainman\",\n        \"system_prompt\": \"# Overview\\r\\nRainman is the advanced data intelligence specialist and deputy to Tars within Artificial Orchard Studio, providing deep analytical insights, complex multi-dimensional queries, and strategic metrics that illuminate patterns, bottlenecks, and opportunities across the entire content creation pipeline.\\r\\n\\r\\n# Identity\\r\\nYou are Rainman, Deputy Data Analyst to Tars in the AOS v2 framework. While Tars handles basic data operations and state transitions, you specialize in complex data intelligence, pattern recognition, and comprehensive analytics across the Content Creation Tracker. You possess extensive function call capabilities for sophisticated queries but operate in read-only mode\\u2014you analyze, never modify.\\r\\n\\r\\n# Instructions\\r\\n1. **Complex Queries**: Execute multi-table joins and cross-references across Ideas, Projects, Drafts, Locks, Runs, and Finals to answer intricate questions about content relationships\\r\\n2. **Performance Analytics**: Calculate and report on:\\r\\n   - Conversion rates between pipeline stages\\r\\n   - Average time from Idea to Final Package\\r\\n   - Success rates by content type, platform, creator\\r\\n   - Production bottlenecks and failure points\\r\\n   - Asset generation efficiency metrics\\r\\n3. **Pattern Recognition**: Identify trends such as:\\r\\n   - Which idea types most frequently reach publication\\r\\n   - Optimal Draft-to-Lock ratios for successful projects\\r\\n   - Common failure patterns in Production Runs\\r\\n   - Seasonal content performance variations\\r\\n4. **Predictive Insights**: Based on historical data, forecast:\\r\\n   - Project completion likelihood\\r\\n   - Resource requirements for upcoming runs\\r\\n   - Potential production delays\\r\\n5. **Strategic Reporting**: Provide comprehensive analyses for Spielberg and human stakeholders about studio performance, efficiency opportunities, and data-driven recommendations\\r\\n6. **Support Tars**: Handle queries too complex for basic operations, providing detailed context Tars needs for decision-making\\r\\n\\r\\n# Examples\\r\\n**Query**: \\\"What's the correlation between draft revision count and final package success rate?\\\"\\r\\n**Response**: \\\"Analyzing 847 projects: Drafts with 2-3 revisions show 78% publication success, while those with 5+ revisions drop to 34%. Optimal revision sweet spot identified at 2.4 iterations.\\\"\\r\\n\\r\\n**Query**: \\\"Which AI platforms have highest deliverable completion rates?\\\"\\r\\n**Response**: \\\"Cross-referencing Production Runs: Fal.ai (94% completion), OpenAI image (91%), Seedance video (73%). Veo 3 shows 67% but produces highest engagement metrics post-publication.\\\"\\r\\n\\r\\n**Query**: \\\"Bottleneck analysis for last quarter?\\\"\\r\\n**Response**: \\\"Primary bottleneck: Draft-to-Lock transition averaging 4.2 days (target: 2 days). Root cause: 62% of delays occur awaiting Kim's QA approval. Secondary bottleneck: Production Runs failing at audio generation (ElevenLabs timeout issues affecting 23% of runs).\\\"\\r\\n\\r\\n# Context\\r\\nYou operate within AOS v2's data architecture, accessing Content Creation Tracker, System Stats and Logs, and Studio Input Contexts. Following Groundhog Day protocol, you retain no memory between sessions. Your insights feed strategic decisions by Spielberg, operational adjustments by Tars, and creative pivots by Paulina. While you cannot modify data, your analytical depth enables the studio to optimize its multi-agent orchestration continuously.\",\n        \"human_reference_raw-notes_i-agent-o_framework\": \"\",\n        \"chat_memory_session_id\": \"rainman\"\n      } }}",
              "type": "object"
            },
            {
              "id": "c43f962d-5303-428a-a1e4-a30024016dc3",
              "name": "aos_agents.forest",
              "value": "={{ {\n        \"name\": \"forest\",\n        \"system_prompt\": \"# Overview\\r\\nForest is the Production Run orchestrator within Artificial Orchard Studio, overseeing the execution of AI-generated media asset creation, monitoring production workflows, validating inputs, and ensuring deliverables meet specifications established in Production Version Locks.\\r\\n\\r\\n# Identity\\r\\nYou are Forest, the Production Run Agent in the AOS v2 framework. You manage the critical phase where creative plans transform into actual media assets through AI generation workflows. While you don't execute production directly, you're the watchful guardian ensuring all runs proceed correctly from initiation through completion.\\r\\n\\r\\n# Instructions\\r\\n1. **Pre-Run Validation**: When Production Version Lock is ready, verify:\\r\\n   - Shot List JSON is properly formatted\\r\\n   - All required deliverable specifications present\\r\\n   - API endpoints (Fal.ai, Seedance, Veo 3, etc.) are accessible\\r\\n   - Production parameters align with Lock requirements\\r\\n2. **Run Management**:\\r\\n   - Initiate production runs via n8n workflow triggers\\r\\n   - Monitor status: running, paused, stopped_error, stopped_terminated, finished_incomplete, finished_complete\\r\\n   - Track deliverable generation progress against Shot List specifications\\r\\n   - Report issues immediately to Spielberg\\/Tars\\r\\n3. **Progress Reporting**: Provide real-time updates on:\\r\\n   - Current deliverable being generated\\r\\n   - Completion percentage\\r\\n   - Error diagnostics if workflows fail\\r\\n   - Asset storage confirmation in Google Drive\\r\\n4. **Completion Verification**: Confirm all deliverables from Production Version Lock are generated before marking run as finished_complete\\r\\n\\r\\n# Examples\\r\\n- \\\"Run #45 initiated. Generating 3 video assets, 5 images. Current: Video 1\\/3 (Seedance processing)\\\"\\r\\n- \\\"ERROR: Run #67 stopped - Veo 3 API timeout on deliverable 4. Retrying...\\\"\\r\\n- \\\"Run #89 finished_complete. All 12 deliverables generated and stored in \\/Assets\\/Run89\\/\\\"\\r\\n\\r\\n# Context\\r\\nYou operate between Lock and Final phases, triggered when MacGuyver's Shot Lists are approved. You interface with multiple AI generation sub-workflows (image, video, audio) through n8n, ensuring Caesar's prompts materialize into publishable assets for Brittany's final deployment.\",\n        \"human_reference_raw-notes_i-agent-o_framework\": \"\",\n        \"chat_memory_session_id\": \"forest\"\n      } }}",
              "type": "object"
            },
            {
              "id": "738eadcd-bc92-4634-b4dc-d7b5d2f4f07b",
              "name": "aos_agents.brittany",
              "value": "={{ {\n        \"name\": \"brittany\",\n        \"system_prompt\": \"# Overview\\r\\nYou are Brittany, the Publishing Agent within the Artificial Orchard Studio (AOS) Content Creation Swarm System: a multi-agent AI framework for media asset creation, review, and publication, leveraging Google Drive, Google Sheets, and multi-channel human-AI collaboration. Your purpose is to publish finalized content packages and compose\\/verify captions prior to publication, ensuring records and publication status remain synchronized.\\r\\n\\r\\n# Identity\\r\\n- Brittany: Publishing Agent. Your scope includes taking finalized packages from Google Drive\\/Sheets, preparing and publishing the content per workflow SOPs, confirming all content states, and reporting publication outcomes. You do not recall prior interactions\\u2014treat every instruction as self-contained.\\r\\n\\r\\n# Instructions\\r\\n1. Receive assignment with content package, its metadata, and target channel\\/platform.\\r\\n2. Validate the package is at Final status (\\\"ready_for_upload\\\", \\\"uploaded_to_cdn\\\", \\\"scheduled\\\"), all required fields filled, and assets in Google Drive.\\r\\n3. If a final caption is needed and not supplied, draft a concise, context-appropriate caption referencing project\\/deliverable info.\\r\\n4. Initiate publication via relevant publishing API or workflow (see n8n link in Context below).\\r\\n5. Update status to \\\"published\\\" or other appropriate state in Google Sheet.\\r\\n6. Report whether publication succeeded, failed, or was rolled back, and why.\\r\\n7. Treat each request as stateless.\\r\\n8. Share only necessary, clear status responses for downstream agent\\/human follow-up.\\r\\n\\r\\n# Examples\\r\\n**Input:**\\r\\n- Final Package: [Project Alpha, Deliverable: \\\"IG Post\\\", Caption: \\\"\\\", Status: \\\"ready_for_upload\\\"]\\r\\n\\r\\n**Reasoning:**\\r\\n- Check all fields; caption missing, generate friendly caption referencing Project Alpha.\\r\\n- Confirm file in upload location.\\r\\n- Trigger publish sub-workflow.\\r\\n- Update status in tracker.\\r\\n\\r\\n**Conclusion:**\\r\\n- Publication succeeded, status set to \\\"published\\\".  \\r\\n- Caption used: \\\"Project Alpha is live! Don\\u2019t miss our new IG Post.\\\"\\r\\n\\r\\n(Real examples will include: actual file names, links, deliverable\\/package IDs, timestamp, and error state if not successful.)\\r\\n\\r\\n# Context\\r\\n- AOS Swarm System: Agents operate via Google Drive\\/Sheets, each with discrete roles.\\r\\n- Brittany posts only finalized, QA-approved content; drafts not eligible.\\r\\n- Publication tool: https:\\/\\/adamandjalen.app.n8n.cloud\\/workflow\\/TTRgShxKssQmwHFQ\\r\\n- Possible states and folder locations in [Data status states] and [Google Drive Folders] above.\\r\\n- No memory; reference all needed context per request.\\r\\n- Outputs must support downstream automation and audit trails.\\r\\n\\r\\n---\\r\\n\\r\\n**REMINDER: You are Brittany, the Publishing Agent. Execute all publishing actions in a stateless, accurate, and audit-friendly manner, following SOPs and the above workflow.**\",\n        \"human_reference_raw-notes_i-agent-o_framework\": \"\",\n        \"chat_memory_session_id\": \"brittany\"\n      } }}",
              "type": "object"
            },
            {
              "id": "6bb176ae-c06f-4dfe-843c-29b02a5015f1",
              "name": "aos_agents.caesar",
              "value": "={{ {\n        \"name\": \"caesar\",\n        \"system_prompt\": \"# Overview\\r\\nCaesar is the prompt engineering specialist within Paulina's Writing Room at Artificial Orchard Studio, translating creative drafts into precise AI generation prompts that enable the production pipeline to transform written content into multimedia assets across image, video, and audio platforms.\\r\\n\\r\\n# Identity\\r\\nYou are Caesar, the Prompt Engineer in Paulina's Writing Room (PWR) within the Artificial Orchard Studio v2 framework. You are the critical bridge between human creativity and AI generation, transforming drafts into technical prompts that AI models can execute. Your expertise spans multiple AI platforms including Wavespeed.ai, Fal.ai, OpenRouter, OpenAI, Anthropic, Seedance, Google Veo 3, and ElevenLabs.\\r\\n\\r\\n# Instructions\\r\\n1. **Receive Draft Data**: When Paulina provides row information containing draft content, analyze the creative vision, target deliverables, and technical requirements\\r\\n2. **Prompt Architecture**: Create structured prompts optimized for each AI platform:\\r\\n   - Image prompts: Style, composition, lighting, mood, technical specs\\r\\n   - Video prompts: Motion, transitions, pacing, visual narrative\\r\\n   - Audio prompts: Voice characteristics, tone, pacing, emotion\\r\\n   - Text prompts: Style, format, voice, length constraints\\r\\n3. **Platform Optimization**: Tailor prompt syntax and parameters to each AI service's unique requirements and capabilities\\r\\n4. **Revision Support**: When drafts are updated, efficiently modify prompts to reflect changes while maintaining consistency\\r\\n5. **Quality Control**: Include negative prompts, style references, and technical parameters to ensure output quality\\r\\n6. **Return to Paulina**: Pass completed prompts back with notes on platform selection and any technical considerations\\r\\n\\r\\n# Examples\\r\\n**Image Generation (OpenAI\\/Fal.ai)**:\\r\\n\\\"Cinematic shot of sustainable fashion model, golden hour lighting, shallow depth of field, wearing organic cotton ensemble, rooftop garden setting, editorial photography style, 16:9 aspect ratio, hyperrealistic, professional color grading\\\"\\r\\n\\r\\n**Video Generation (Seedance\\/Veo 3)**:\\r\\n\\\"Smooth camera dolly through modern office space, employees collaborating, warm natural lighting, 4K resolution, 24fps, subtle motion blur, corporate yet approachable mood, 15-second duration, seamless loop\\\"\\r\\n\\r\\n**Audio Generation (ElevenLabs)**:\\r\\n\\\"Professional female narrator, warm conversational tone, medium pace with strategic pauses, subtle enthusiasm for product features, American accent, age 30-40, clear articulation, podcast-quality audio\\\"\\r\\n\\r\\n# Context\\r\\nYou operate within AOS v2's pipeline (Idea\\u2192Project\\u2192Draft\\u2192Lock\\u2192Run\\u2192Final), contributing during the Draft-to-Lock transition. You interface exclusively through Paulina alongside Eddie (short-form), Hemingway (long-form), and Kim (QA).\\r\\n\\r\\nYour prompts directly feed MacGuyver's shot lists and Forest's production runs. Each prompt must align with platform capabilities, budget constraints, and technical specifications stored in the Content Creation Tracker.\\r\\n\\r\\nOperating under Groundhog Day protocol\\u2014no memory between sessions. Your prompts determine whether AI-generated assets meet quality standards for advancement to Production Version Lock status.\\r\\n\\r\\nKey: Transform creative vision into executable AI instructions that consistently produce publication-ready assets.\",\n        \"human_reference_raw-notes_i-agent-o_framework\": \"\",\n        \"chat_memory_session_id\": \"caesar\"\n      } }}",
              "type": "object"
            },
            {
              "id": "c99708d7-120a-482e-a4b5-92720c7e58dd",
              "name": "aos_agents.default_ai_agent_values",
              "value": "={{ \n{\n\"postgres_chat_messages_context_length\": 10\n}\n}}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -144,
        -1984
      ],
      "id": "df79bce7-9e68-49ee-ba4e-4b2da021da56",
      "name": "aos_agents_and_prompts"
    },
    {
      "parameters": {
        "description": "Create a new Project and assorted folders,  files and initial data instances once an idea is approved by a human / ai agent with authorized approval privileges. Must have \n1. idea_id\n2. project_title",
        "workflowId": {
          "__rl": true,
          "value": "dGwc8J6RIWuRsAte",
          "mode": "list",
          "cachedResultName": "Artificial Orchard Studios — Create Project"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "idea_id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('idea_id', ``, 'string') }}",
            "project_title": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('project_title', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "idea_id",
              "displayName": "idea_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "project_title",
              "displayName": "project_title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "aos_system_contexts",
              "displayName": "aos_system_contexts",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "object"
            },
            {
              "id": "chat_id",
              "displayName": "chat_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        2064,
        -960
      ],
      "id": "b1069c61-8ef4-4e12-8228-5220550ea4b3",
      "name": "Create Project"
    },
    {
      "parameters": {
        "description": "Call this tool to edit an image. The fields to send to this tool are:\n- the image name\n- the image edit request\n- the file ID",
        "workflowId": {
          "__rl": true,
          "value": "4KHs0PDLrkaiaiXW",
          "mode": "list",
          "cachedResultName": "Artificial Orchard Studios — aosv2 Edit Image Tool"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "image": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('image', ``, 'string') }}",
            "request": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('request', ``, 'string') }}",
            "chatID": "={{ $('Telegram Trigger JALEN').item.json.message.chat.id }}",
            "pictureID": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('pictureID', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "image",
              "displayName": "image",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "request",
              "displayName": "request",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "chatID",
              "displayName": "chatID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "pictureID",
              "displayName": "pictureID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1296,
        -1936
      ],
      "id": "3465e8f8-0313-4fb2-a2d0-ca8d8b6bf0cc",
      "name": "Edit Image"
    },
    {
      "parameters": {
        "description": "Call this tool to create an image. The fields to send to this tool are:\n1. Image name\n2. Image prompt",
        "workflowId": {
          "__rl": true,
          "value": "Y23X93rkevIWtEGj",
          "mode": "list",
          "cachedResultName": "Artificial Orchard Studios — aosv2 Create Image Tool"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "image": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('image', ``, 'string') }}",
            "prompt": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('prompt', ``, 'string') }}",
            "chatID": "={{ $('Telegram Trigger JALEN').item.json.message.chat.id }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "image",
              "displayName": "image",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "prompt",
              "displayName": "prompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "chatID",
              "displayName": "chatID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1408,
        -1936
      ],
      "id": "2ecfab5c-166d-4338-bfa1-7196ec42e774",
      "name": "Create Image"
    },
    {
      "parameters": {
        "toolDescription": "An agent that can create images and videos and edit images",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {
          "systemMessage": "=# Overview\nYou are a creative agent. Use your tools to take action as requested. \n\nYou are an expert AI image/video prompt generator\n\n## Tools\n- Edit Image: Use this tool to edit an image\n- Create Image: Use this tool to create an image\n- Image to Video: Use this tool to turn an image into a video\n- Create Video: Use this tool to create a video from text\n\n## Instructions\n- Image prompts should be detailed and stylized\n- Video prompts should be concise, energetic, and should be one seamless video with no cuts. Explain the sounds in the video or any dialogue."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        1216,
        -2112
      ],
      "id": "50cd8fe8-d079-4ecf-89a5-707c87c7eeae",
      "name": "Creative Agent"
    },
    {
      "parameters": {
        "model": "openai/gpt-5-mini",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        1184,
        -1936
      ],
      "id": "8c97f4c6-282a-4b23-970e-9b51e9b6429d",
      "name": "GPT 5-mini4",
      "credentials": {
        "openRouterApi": {
          "id": "pwj1L3d2Ror7G0eW",
          "name": "AO Workspace ALL | (@adamandjalen@gmail acc.)"
        }
      }
    },
    {
      "parameters": {
        "description": "Call this tool to create a video from a text prompt. The fields to pass over are:\n1. Video prompt\n2. Video title\n3. aspect ratio (Possible enum values: 16:9, 9:16, 1:1)",
        "workflowId": {
          "__rl": true,
          "value": "EZYKXuhUsWx7y9zD",
          "mode": "list",
          "cachedResultName": "Artificial Orchard Studios — Create Video Tool"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "chatID": "={{ $('Telegram Trigger JALEN').item.json.message.chat.id }}",
            "prompt": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('prompt', ``, 'string') }}",
            "videoTitle": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('videoTitle', ``, 'string') }}",
            "aspectRatio": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('aspectRatio', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "prompt",
              "displayName": "prompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "chatID",
              "displayName": "chatID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "videoTitle",
              "displayName": "videoTitle",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "aspectRatio",
              "displayName": "aspectRatio",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1360,
        -1792
      ],
      "id": "c27d64b1-0c33-456b-b73c-a4da6d4ca6ee",
      "name": "Create Video"
    },
    {
      "parameters": {
        "description": "Call this tool to create a video ad from a picture. The fields to pass over are:\n1. Google Drive file ID of the image\n2. Video prompt\n3. Name of the image\n4. aspect ratio (Possible enum values: 16:9, 9:16, 1:1)",
        "workflowId": {
          "__rl": true,
          "value": "bWWSxVefnjeOMZtP",
          "mode": "list",
          "cachedResultName": "Artificial Orchard Studios — Image to Video Tool"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "fileID": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fileID', ``, 'string') }}",
            "videoPrompt": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('videoPrompt', ``, 'string') }}",
            "image": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('image', ``, 'string') }}",
            "chatID": "={{ $('Telegram Trigger JALEN').item.json.message.chat.id }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "fileID",
              "displayName": "fileID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "videoPrompt",
              "displayName": "videoPrompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "chatID",
              "displayName": "chatID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "image",
              "displayName": "image",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1248,
        -1792
      ],
      "id": "cba2dd00-16e5-4fae-9cb1-af6f6b12ebea",
      "name": "Image to Video"
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $('Telegram Trigger JALEN').item.json.message.photo[0].file_id }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -400,
        -1424
      ],
      "id": "a5393290-5eea-4c81-82ca-23df84192e9d",
      "name": "Download File",
      "webhookId": "fb18f65f-c1cf-4473-b59d-d59d6b96e9ea",
      "credentials": {
        "telegramApi": {
          "id": "q0oWlq3ffaOp8PwB",
          "name": "Orchard Studios | OrchardStudios_bot"
        }
      }
    },
    {
      "parameters": {
        "name": "=upload_{{ $now.format('yyyy-MM-dd h:mm a') }}",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "value": "13s7B6l6OiB3e2p_Yv3LaHjqteePYNPCY",
          "mode": "list",
          "cachedResultName": "Uploaded Media",
          "cachedResultUrl": "https://drive.google.com/drive/folders/13s7B6l6OiB3e2p_Yv3LaHjqteePYNPCY"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -192,
        -1424
      ],
      "id": "27ce15a9-ca04-4917-840a-a3ea6e3ff838",
      "name": "Upload file",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "ScH2Khz6AL9njL5N",
          "name": "Google Drive — AO"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "53de4eb0-6684-48f5-a5b5-2b3bedaff817",
              "name": "text",
              "value": "=The user just submitted a picture. Here is the ID of that file in Google Drive: {{ $json.id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -16,
        -1424
      ],
      "id": "51923387-8cce-4933-8c3b-e7a74958dad4",
      "name": "Set Text"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('aos_prompts_and_context').item.json.aos_prompts_and_contexts.aos_agents.kim.chat_memory_session_id }}",
        "tableName": "={{ $('aos_prompts_and_context').item.json.aos_prompts_and_contexts.aos_system_contexts.agent_memories_supabase_table }}",
        "contextWindowLength": 3
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -288,
        512
      ],
      "id": "8452c2a8-a8b5-47a4-b710-7de06b60b43c",
      "name": "Postgres Memory - Kim",
      "credentials": {
        "postgres": {
          "id": "85Tuim46hYnLqadX",
          "name": "Postgres via Supabase — AO"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('aos_prompts_and_context').item.json.aos_prompts_and_contexts.aos_agents.hemenway.chat_memory_session_id }}",
        "tableName": "={{ $('aos_prompts_and_context').item.json.aos_prompts_and_contexts.aos_system_contexts.agent_memories_supabase_table }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -304,
        -400
      ],
      "id": "bd63fd74-1e08-4986-bd5e-fa376f8fb9ac",
      "name": "Postgres Memory - Hemenway",
      "credentials": {
        "postgres": {
          "id": "85Tuim46hYnLqadX",
          "name": "Postgres via Supabase — AO"
        }
      }
    },
    {
      "parameters": {
        "text": "=Data ID: {{ $fromAI(\"data_id\") }}\nQuery: {{ $fromAI(\"query\") }}\nAdditional Info: {{ $fromAI(\"additional_info\") }}\n\nCurrent Date/Time (ISO format): {{ $now.toUTC().toISO() }}",
        "needsFallback": true,
        "options": {
          "systemMessage": "={{ $('aos_prompts_and_context').item.json.aos_prompts_and_contexts.aos_agents.hemenway.system_prompt }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        -400,
        -608
      ],
      "id": "c312f77b-7de4-4dd1-be18-5e37a72886cf",
      "name": "Hemenway - General Writing Agent"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1744,
        -1648
      ],
      "id": "a03d4dcd-baa5-493c-a731-c9acf3fc9354",
      "name": "Wait 5s",
      "webhookId": "34cb9684-a003-492f-aaf3-c934ad6e9f17"
    },
    {
      "parameters": {
        "jsCode": "function escapeMarkdownV2(text) {\n  return text.replace(/([_\\*\\[\\]()~`>#+\\-=|{}.!\\\\])/g, '\\\\$1');\n}\n\nconst text = $json.Output;\nconst chunkSize = 4048;\nconst result = [];\n\nfor (let i = 0; i < text.length; i += chunkSize) {\n  // Escape each chunk for MarkdownV2\n  result.push({ text: escapeMarkdownV2(text.slice(i, i + chunkSize)) });\n}\n\nreturn result.map(chunk => ({ json: chunk }));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1600,
        -1648
      ],
      "id": "9d077463-8011-460b-a9f4-683176e4f2e7",
      "name": "Split Output if text length > 4048 chars"
    }
  ],
  "connections": {
    "Set 'Text'": {
      "main": [
        [
          {
            "node": "Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Voice File": {
      "main": [
        [
          {
            "node": "Transcribe Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe Audio": {
      "main": [
        [
          {
            "node": "Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Download Voice File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set 'Text'",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Download File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Input": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Clean Up": {
      "main": [
        [
          {
            "node": "Append to Agent Logs Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append to Agent Logs Sheet": {
      "main": [
        [
          {
            "node": "Split Output if text length > 4048 chars",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger JALEN": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          },
          {
            "node": "_",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Brittany - Public Relations Agent": {
      "ai_tool": [
        [
          {
            "node": "Spielberg - Orchard Studios Director Orchestration Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Publish Final Package": {
      "ai_tool": [
        [
          {
            "node": "Brittany - Public Relations Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create Idea": {
      "ai_tool": [
        [
          {
            "node": "Tars - Database Management Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Calculator Tool": {
      "ai_tool": [
        [
          {
            "node": "Spielberg - Orchard Studios Director Orchestration Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI gpt-5": {
      "ai_languageModel": [
        [
          {
            "node": "Tars - Database Management Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Brittany - Public Relations Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI GPT-5-MINI": {
      "ai_languageModel": [
        [
          {
            "node": "Tars - Database Management Agent",
            "type": "ai_languageModel",
            "index": 1
          },
          {
            "node": "Brittany - Public Relations Agent",
            "type": "ai_languageModel",
            "index": 1
          },
          {
            "node": "Forest - Run Production Runs Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Paulina - Treatment Agent",
            "type": "ai_languageModel",
            "index": 1
          }
        ]
      ]
    },
    "OpenAI gpt-NANO": {
      "ai_languageModel": [
        []
      ]
    },
    "Message Web Model in Perplexity": {
      "ai_tool": [
        [
          {
            "node": "Paulina - Treatment Agent",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Spielberg - Orchard Studios Director Orchestration Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Thinking Tool": {
      "ai_tool": [
        [
          {
            "node": "Tars - Database Management Agent",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Spielberg - Orchard Studios Director Orchestration Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "_": {
      "main": [
        [
          {
            "node": "studio_brandbooks_and_content_guidelines",
            "type": "main",
            "index": 0
          },
          {
            "node": "aos_system_contexts",
            "type": "main",
            "index": 0
          },
          {
            "node": "aos_agents_and_prompts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Spielberg - Orchard Studios Director Orchestration Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OPR gpt-MINI": {
      "ai_languageModel": [
        [
          {
            "node": "Paulina - Treatment Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Forest - Run Production Runs Agent",
            "type": "ai_languageModel",
            "index": 1
          }
        ]
      ]
    },
    "OPRouter gpt-": {
      "ai_languageModel": [
        []
      ]
    },
    "OPRouter gpt-5": {
      "ai_languageModel": [
        []
      ]
    },
    "OPR-gpt-5-NANO1": {
      "ai_languageModel": [
        []
      ]
    },
    "OPR gpt-MINI1": {
      "ai_languageModel": [
        []
      ]
    },
    "Tars - Database Management Agent": {
      "ai_tool": [
        [
          {
            "node": "Spielberg - Orchard Studios Director Orchestration Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Paulina's Writer Room - Writing Agents": {
      "ai_tool": [
        []
      ]
    },
    "aos_prompts_and_context": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Run Production Run Workflow": {
      "ai_tool": [
        [
          {
            "node": "Forest - Run Production Runs Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Forest - Run Production Runs Agent": {
      "ai_tool": [
        [
          {
            "node": "Spielberg - Orchard Studios Director Orchestration Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger ADAM": {
      "main": [
        []
      ]
    },
    "Postgres Memory - Spielberg": {
      "ai_memory": [
        [
          {
            "node": "Spielberg - Orchard Studios Director Orchestration Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Memory - Tars": {
      "ai_memory": [
        [
          {
            "node": "Tars - Database Management Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Memory - Britt": {
      "ai_memory": [
        [
          {
            "node": "Brittany - Public Relations Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Memory - Forest": {
      "ai_memory": [
        [
          {
            "node": "Forest - Run Production Runs Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "gpt5-mini": {
      "ai_languageModel": [
        [
          {
            "node": "Data Mngr (efficient)",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Delete Data": {
      "ai_tool": [
        [
          {
            "node": "Data Mngr (efficient)",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Update Data": {
      "ai_tool": [
        [
          {
            "node": "Data Mngr (efficient)",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Data": {
      "ai_tool": [
        [
          {
            "node": "Data Mngr (efficient)",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create Project1": {
      "ai_tool": [
        [
          {
            "node": "Data Mngr (efficient)",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create Draft1": {
      "ai_tool": [
        [
          {
            "node": "Data Mngr (efficient)",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create Run1": {
      "ai_tool": [
        [
          {
            "node": "Data Mngr (efficient)",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create Lock1": {
      "ai_tool": [
        [
          {
            "node": "Data Mngr (efficient)",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create Final1": {
      "ai_tool": [
        [
          {
            "node": "Data Mngr (efficient)",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create Idea2": {
      "ai_tool": [
        [
          {
            "node": "Data Mngr (efficient)",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Clean Up1": {
      "main": [
        [
          {
            "node": "Update Log1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Log1": {
      "main": [
        [
          {
            "node": "Error Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI GPT-5 (latest)": {
      "ai_languageModel": [
        [
          {
            "node": "Spielberg - Orchard Studios Director Orchestration Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter GPT-5 (latest)": {
      "ai_languageModel": [
        [
          {
            "node": "Spielberg - Orchard Studios Director Orchestration Agent",
            "type": "ai_languageModel",
            "index": 1
          }
        ]
      ]
    },
    "Spielberg - Orchard Studios Director Orchestration Agent": {
      "main": [
        [
          {
            "node": "Clean Up",
            "type": "main",
            "index": 0
          },
          {
            "node": "Clean Up1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Change Name": {
      "ai_tool": [
        [
          {
            "node": "Google Drive Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Share with Email": {
      "ai_tool": [
        [
          {
            "node": "Google Drive Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Share Anyone": {
      "ai_tool": [
        [
          {
            "node": "Google Drive Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Search Media": {
      "ai_tool": [
        [
          {
            "node": "Google Drive Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GPT 5-mini1": {
      "ai_languageModel": [
        [
          {
            "node": "Google Drive Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Search Docs": {
      "ai_tool": [
        [
          {
            "node": "Google Drive Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Memory - Caesar": {
      "ai_memory": [
        [
          {
            "node": "Caesar - Prompt Engineering Agent1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Memory - Eddie": {
      "ai_memory": [
        [
          {
            "node": "Eddie - Pitch & Sketch Writer Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI gpt-5-MINI1": {
      "ai_languageModel": [
        [
          {
            "node": "Hemenway - General Writing Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Caesar - Prompt Engineering Agent1",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Eddie - Pitch & Sketch Writer Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Kim - Technical Specifications Agent2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OPR gpt-MINI2": {
      "ai_languageModel": [
        [
          {
            "node": "Kim - Technical Specifications Agent2",
            "type": "ai_languageModel",
            "index": 1
          },
          {
            "node": "Caesar - Prompt Engineering Agent1",
            "type": "ai_languageModel",
            "index": 1
          },
          {
            "node": "Hemenway - General Writing Agent",
            "type": "ai_languageModel",
            "index": 1
          },
          {
            "node": "Eddie - Pitch & Sketch Writer Agent",
            "type": "ai_languageModel",
            "index": 1
          }
        ]
      ]
    },
    "Postgres Memory - Paulina": {
      "ai_memory": [
        [
          {
            "node": "Paulina - Treatment Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Paulina - Treatment Agent": {
      "ai_tool": [
        [
          {
            "node": "Spielberg - Orchard Studios Director Orchestration Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Eddie - Pitch & Sketch Writer Agent": {
      "ai_tool": [
        [
          {
            "node": "Paulina - Treatment Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Caesar - Prompt Engineering Agent1": {
      "ai_tool": [
        [
          {
            "node": "Paulina - Treatment Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Kim - Technical Specifications Agent2": {
      "ai_tool": [
        [
          {
            "node": "Paulina - Treatment Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Update row in sheet in Google Sheets": {
      "ai_tool": [
        [
          {
            "node": "Paulina - Treatment Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Append row in sheet in Google Sheets": {
      "ai_tool": [
        [
          {
            "node": "Paulina - Treatment Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "MacGyver - Shot List Agent": {
      "ai_tool": [
        [
          {
            "node": "Spielberg - Orchard Studios Director Orchestration Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "aos_prompts_and_context",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "aos_system_contexts": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "studio_brandbooks_and_content_guidelines": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "aos_agents_and_prompts": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Project": {
      "ai_tool": [
        [
          {
            "node": "Tars - Database Management Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create Version Lock": {
      "ai_tool": [
        [
          {
            "node": "Tars - Database Management Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create Final Package": {
      "ai_tool": [
        [
          {
            "node": "Tars - Database Management Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Edit Image": {
      "ai_tool": [
        [
          {
            "node": "Creative Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create Image": {
      "ai_tool": [
        [
          {
            "node": "Creative Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GPT 5-mini4": {
      "ai_languageModel": [
        [
          {
            "node": "Creative Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Create Video": {
      "ai_tool": [
        [
          {
            "node": "Creative Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Image to Video": {
      "ai_tool": [
        [
          {
            "node": "Creative Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Creative Agent": {
      "ai_tool": [
        [
          {
            "node": "Spielberg - Orchard Studios Director Orchestration Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Download File": {
      "main": [
        [
          {
            "node": "Upload file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload file": {
      "main": [
        [
          {
            "node": "Set Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Text": {
      "main": [
        [
          {
            "node": "Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Memory - Kim": {
      "ai_memory": [
        [
          {
            "node": "Kim - Technical Specifications Agent2",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Memory - Hemenway": {
      "ai_memory": [
        [
          {
            "node": "Hemenway - General Writing Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Hemenway - General Writing Agent": {
      "ai_tool": [
        [
          {
            "node": "Paulina - Treatment Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Response": {
      "main": [
        []
      ]
    },
    "Wait 5s": {
      "main": [
        [
          {
            "node": "Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Output if text length > 4048 chars": {
      "main": [
        [
          {
            "node": "Wait 5s",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "JmLYbqCl9FcjEn1d",
    "saveExecutionProgress": true
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": [
        19
      ]
    }
  },
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {
    "Telegram Trigger JALEN": [
      {
        "json": {
          "update_id": 176168545,
          "message": {
            "message_id": 217,
            "from": {
              "id": 8129407016,
              "is_bot": false,
              "first_name": "Jalen",
              "last_name": "Gonel",
              "language_code": "en"
            },
            "chat": {
              "id": 8129407016,
              "first_name": "Jalen",
              "last_name": "Gonel",
              "type": "private"
            },
            "date": 1757121108,
            "text": "dont create any drafts, don't fill out existing content, and make sure you tell Paulina this too. I want to see a response from each sub agent in the writing room (not including Paulina). Have her return the verbatim set of responses of each agent in her writing room, and then respond  Spielberg respond in your final response with all their responses consolidated as one response. Also, skip a line and also include the prompt/query used for each respective agent that made them output what they did. Implore that they JUST DO IT and do not request clarifications or apprehensions. tell them (all writing agents) to just respond and make sure Paulina is told to do this when she prompts the writing room agents directly."
          }
        }
      }
    ],
    "Spielberg - Orchard Studios Director Orchestration Agent": [
      {
        "json": {
          "output": "Writing room sub-agent responses (verbatim):\n- Eddie — Verbatim response:\nTagline: \"Just Do It.\" Treatment: bold condensed uppercase white type over a low-angle mid-stride hero at sunrise, heavy contrast, motion streaks, film grain, and a single saturated accent; execution: 6–15s social edits and UGC montage showing the first minute of starting something, hero gallery stitching, CTA \"Start Now.\"\n\n- Hemingway — Verbatim response:\nHero image: solitary runner cresting a dawn ridge, sweat and grit in sharp focus; headline: \"Done Is the New Perfect.\" Micro-story: a single relentless step rewrites limits. Visual treatment: high-contrast warm backlight, tight crop on jawline and eyes, motion-blur trail to suggest momentum; ample negative space at right for bold white CTA. Tone: urgent, uncompromising—JUST DO IT.\n\n- Caesar — Verbatim response:\nHeadline: \"Own the Moment.\" Hero: athletic figure frozen mid-leap with motion-blur trails, dramatic warm rim light, high-contrast teal‑orange grade, shallow depth of field and clean negative space bottom-right for bold sans-serif logo and single-word CTA \"Begin\"—photoreal, studio polish.\n\n- Kim — Verbatim response:\nExport hero at 4200×2800px (3:2), 300 PPI, sRGB; provide PNG‑24 for web and layered TIFF (CMYK) for print; include 120px bleed and 40px safe area, center copy within safe area; ensure WCAG AA contrast ≥4.5:1, legible at 320px width; supply responsive crops (desktop/tablet/phone), alt text ≤125 characters, filename brand_hero_v01_20250906.tif, lossless compression, and include a color‑checked proof and versioned deliverables.\n\nConsolidated response:\nHero visual: low-angle, mid-stride/mid‑leap athlete at sunrise with warm rim light, subtle motion streaks, shallow depth, teal‑orange high contrast, and clean negative space bottom-right. Headline set: primary “Own the Moment”; alternates “Just Do It” and “Done Is the New Perfect.” CTA: single-word, bold, high-contrast — “Begin” (alt: “Start Now”) placed at right. Activation: 6–15s social edits showcasing the first minute of a new habit with UGC montage. Delivery: 4200×2800, 300 PPI, sRGB; PNG‑24 (web) + layered TIFF (CMYK print); 120px bleed, 40px safe; WCAG AA ≥4.5:1; responsive crops; alt ≤125 chars; versioned files and color‑checked proof.\n\nPrompts/queries used per agent:\n- Eddie:\n\"JUST DO IT. In one tight paragraph (<= 80 words), contribute your single best, role-aligned output to kickstart creative development for a newly uploaded visual asset (Google Drive file ID: 1_FdfMqTOOa3Op_t1Lqqh1YIYY_NXTSGE). Assume it is a hero image for a brand campaign. Do not ask questions or request more info. Do not write preambles or disclaimers. Deliver only the output your role would contribute at this stage.\"\n- Hemingway:\n\"JUST DO IT. In one tight paragraph (<= 80 words), contribute your single best, role-aligned output to kickstart creative development for a newly uploaded visual asset (Google Drive file ID: 1_FdfMqTOOa3Op_t1Lqqh1YIYY_NXTSGE). Assume it is a hero image for a brand campaign. Do not ask questions or request more info. Do not write preambles or disclaimers. Deliver only the output your role would contribute at this stage.\"\n- Caesar:\n\"JUST DO IT. In one tight paragraph (<= 80 words), contribute your single best, role-aligned output to kickstart creative development for a newly uploaded visual asset (Google Drive file ID: 1_FdfMqTOOa3Op_t1Lqqh1YIYY_NXTSGE). Assume it is a hero image for a brand campaign. Do not ask questions or request more info. Do not write preambles or disclaimers. Deliver only the output your role would contribute at this stage.\"\n- Kim:\n\"JUST DO IT. In one tight paragraph (<= 80 words), contribute your single best, role-aligned output to kickstart creative development for a newly uploaded visual asset (Google Drive file ID: 1_FdfMqTOOa3Op_t1Lqqh1YIYY_NXTSGE). Assume it is a hero image for a brand campaign. Do not ask questions or request more info. Do not write preambles or disclaimers. Deliver only the output your role would contribute at this stage.\""
        }
      }
    ]
  },
  "versionId": "cff29d30-7813-45ad-a9a1-db5e456e64f0",
  "triggerCount": 2,
  "shared": [
    {
      "createdAt": "2025-08-29T12:28:26.614Z",
      "updatedAt": "2025-08-29T12:28:26.614Z",
      "role": "workflow:owner",
      "workflowId": "qbJAqng79qmg7On6",
      "projectId": "HfigHpl3ehAllbzR"
    }
  ],
  "tags": [
    {
      "createdAt": "2025-06-13T18:53:35.718Z",
      "updatedAt": "2025-06-13T18:53:35.718Z",
      "id": "3AJ5Lts6LHaBF3n6",
      "name": "orchestrator"
    },
    {
      "createdAt": "2025-07-29T02:35:46.621Z",
      "updatedAt": "2025-07-29T02:35:46.621Z",
      "id": "4EqVCX3X64jhyArU",
      "name": "AOS V2 🤖"
    },
    {
      "createdAt": "2025-06-17T01:19:45.573Z",
      "updatedAt": "2025-06-17T01:19:45.573Z",
      "id": "RLENJg8MGrx0Qypt",
      "name": "Orchard Studios"
    },
    {
      "createdAt": "2025-06-12T05:33:46.825Z",
      "updatedAt": "2025-07-31T08:57:36.201Z",
      "id": "ZDNWkpf5W9vMUubA",
      "name": "🤖 agent"
    }
  ]
}